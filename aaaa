import React, { useEffect, useState } from "react";
import axios from "axios";

const Dashboard = () => {
  const [summary, setSummary] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchLiveSummary();
  }, []);

  const fetchLiveSummary = async () => {
    try {
      const { data } = await axios.get("http://localhost:3007/api/occupancy/live-summary");
      if (data.success) {
        setSummary(data);
      }
    } catch (err) {
      console.error("Failed to fetch data", err);
    } finally {
      setLoading(false);
    }
  };

  if (loading) return <div className="p-4 text-gray-500">Loading dashboard...</div>;

  return (
    <div className="p-6 space-y-6">
      {/* TODAY SUMMARY */}
      <div>
        <h2 className="text-2xl font-semibold mb-4">Today Summary</h2>
        <div className="grid grid-cols-3 gap-4">
          {["total", "Employee", "Contractor"].map((key) => (
            <div key={key} className="bg-blue-50 rounded-xl p-4 shadow">
              <div className="text-gray-600 text-sm">{key}</div>
              <div className="text-xl font-bold">{summary.today[key]}</div>
            </div>
          ))}
        </div>
      </div>

      {/* REALTIME LOCATION SUMMARY */}
      <div>
        <h2 className="text-2xl font-semibold mb-4">Real-Time Occupancy</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {Object.entries(summary.realtime).map(([location, data]) => (
            <div key={location} className="border rounded-xl p-4 bg-white shadow-sm">
              <div className="font-semibold text-lg">{location}</div>
              <div className="text-sm text-gray-500 mb-2">
                Total: {data.total} | Employees: {data.Employee} | Contractors: {data.Contractor}
              </div>
              <div className="text-sm text-gray-700 space-y-1">
                {Object.entries(data.floors).map(([floor, count]) => (
                  <div key={floor} className="flex justify-between">
                    <span>{floor}</span>
                    <span>{count}</span>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* LIVE ACCESS DETAILS */}
      <div>
        <h2 className="text-2xl font-semibold mb-4">Live Access Details</h2>
        <div className="overflow-x-auto">
          <table className="min-w-full border text-sm">
            <thead className="bg-gray-100 text-gray-600 uppercase text-xs">
              <tr>
                <th className="px-4 py-2 border">Name</th>
                <th className="px-4 py-2 border">Type</th>
                <th className="px-4 py-2 border">Location</th>
                <th className="px-4 py-2 border">Direction</th>
                <th className="px-4 py-2 border">Time</th>
                <th className="px-4 py-2 border">Door</th>
              </tr>
            </thead>
            <tbody>
              {summary.details.slice(0, 10).map((entry, idx) => (
                <tr key={idx} className="hover:bg-gray-50">
                  <td className="px-4 py-2 border">{entry.ObjectName1}</td>
                  <td className="px-4 py-2 border">{entry.PersonnelType}</td>
                  <td className="px-4 py-2 border">{entry.PartitionName2}</td>
                  <td className="px-4 py-2 border">{entry.Direction}</td>
                  <td className="px-4 py-2 border">
                    {new Date(entry.LocaleMessageTime).toLocaleString()}
                  </td>
                  <td className="px-4 py-2 border">{entry.Door}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;