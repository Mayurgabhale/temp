const partitionRows = useMemo(() => {
  if (!summaryEntry) return [];

  return Object.entries(summaryEntry.partitions)
    .filter(([key]) => {
      if (!backendFilterKey) return true;
      
      // Normalize keys for comparison
      const normalizedKey = key.replace(' City', '');
      const normalizedFilter = backendFilterKey.replace(' City', '');
      
      return normalizedKey === normalizedFilter;
    })
    .map(([key, vals]) => {
      // Find matching frontend code
      const feCode = Object.entries(apacForwardKey).find(
        ([code, beKey]) => beKey === key || `${beKey} City` === key
      )?.[0];

      const display = feCode ? apacPartitionDisplay[feCode] : null;

      return {
        country: display?.country || 'Unknown',
        city: display?.city || key.replace(' City', ''),
        employee: vals.Employee ?? vals.EmployeeCount ?? 0,
        contractor: vals.Contractor ?? vals.ContractorCount ?? 0,
        total: vals.total ?? 0,
      };
    });
}, [summaryEntry, backendFilterKey]);