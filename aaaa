import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  LabelList,
  Cell
} from 'recharts';

// A simple green-based palette
const GREEN_SCALE = [
  '#66BB6A', '#81C784', '#A5D6A7',
  '#C8E6C9', '#E8F5E9', '#43A047',
  '#388E3C', '#2E7D32', '#1B5E20', '#4CAF50'
];

export default function CompositeChartCardAPAC({
  title,
  data,                   // [{ name, headcount, capacity }, â€¦]
  lineColor = '#4CAF50',
  height = 350
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card
        sx={{ border: `2px dashed ${lineColor}`, bgcolor: 'rgba(0,0,0,0.3)' }}
      >
        <CardContent>
          <Typography variant="subtitle1" align="center" color="text.secondary">
            {title}
          </Typography>
          <Typography variant="body2" align="center" sx={{ mt: 4 }}>
            No data to display
          </Typography>
        </CardContent>
      </Card>
    );
  }

  // Add percentage & per-bar color
  const enriched = data.map((d, i) => ({
    ...d,
    percentage: d.capacity
      ? Math.round((d.headcount / d.capacity) * 100)
      : 0,
    _color: GREEN_SCALE[i % GREEN_SCALE.length]
  }));

  const totalHeadcount = enriched.reduce((s, d) => s + d.headcount, 0);
  const totalCapacity  = enriched.reduce((s, d) => s + d.capacity, 0);
  const avgUsage       = totalCapacity
    ? Math.round((totalHeadcount / totalCapacity) * 100)
    : 0;

  return (
    <Card sx={{
      borderRadius: 2,
      bgcolor: 'rgba(0,0,0,0.5)',
      overflow: 'hidden',
      boxShadow: '0 4px 12px rgba(0,0,0,0.6)'
    }}>
      <CardContent>
        {title && (
          <Typography
            variant="h6"
            align="center"
            gutterBottom
            sx={{ color: lineColor }}
          >
            {title}
          </Typography>
        )}

        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart
              data={enriched}
              margin={{ top: 16, right: 24, left: 0, bottom: 24 }}
            >
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />

              <XAxis
                dataKey="name"
                tick={{ fill: '#fff' }}
                interval={0}
                angle={-20}
                textAnchor="end"
              />

              <YAxis
                yAxisId="left"
                tick={{ fill: '#fff' }}
                axisLine={false}
                tickLine={false}
              />

              <YAxis
                yAxisId="right"
                orientation="right"
                tickFormatter={v => `${v}%`}
                tick={{ fill: '#fff' }}
                axisLine={false}
                tickLine={false}
                domain={[0, 100]}
              />

              <Tooltip
                contentStyle={{ backgroundColor: '#A5D6A7', borderColor: lineColor }}
                formatter={(val, name) =>
                  name === 'percentage' ? `${val}%` : val
                }
              />

              <Bar
                yAxisId="left"
                dataKey="headcount"
                barSize={50}
                name="Headcount"
              >
                {enriched.map((entry, idx) => (
                  <Cell key={idx} fill={entry._color} />
                ))}
                <LabelList
                  dataKey="headcount"
                  position="top"
                  style={{ fill: '#fff', fontWeight: 700 }}
                />
              </Bar>

              <Line
                yAxisId="right"
                type="monotone"
                dataKey="percentage"
                name="Usage %"
                stroke={lineColor}
                strokeWidth={2}
                dot={{ r: 4, stroke: lineColor, strokeWidth: 2, fill: '#fff' }}
              />

            </ComposedChart>
          </ResponsiveContainer>
        </Box>

        <Box sx={{
          mt: 2,
          display: 'flex',
          justifyContent: 'center',
          gap: 4,
          color: '#fff',
          fontWeight: 'bold'
        }}>
          <Typography>Total Headcount: {totalHeadcount}</Typography>
          <Typography>Total Seats: {totalCapacity}</Typography>
          <Typography>Avg. Usage: {avgUsage}%</Typography>
        </Box>
      </CardContent>
    </Card>
  );
}