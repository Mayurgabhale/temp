// src/api/occupancy.service.js

export const getCurrentOccupancy = async (partitionNames) => {
  try {
    if (!Array.isArray(partitionNames)) {
      console.error('getCurrentOccupancy: Expected partitionNames to be an array but received:', partitionNames);
      return { today: {}, realtime: {} };
    }

    const requests = partitionNames.map(partition =>
      fetch(`/api/occupancy?partition=${encodeURIComponent(partition)}`).then(res => {
        if (!res.ok) {
          throw new Error(`Failed to fetch data for partition: ${partition}`);
        }
        return res.json();
      })
    );

    const results = await Promise.all(requests);

    // Assuming API returns an object for each partition with today/realtime breakdowns
    const realtime = {};
    let today = { total: 0, Employee: 0, Contractor: 0 };

    results.forEach((res, idx) => {
      const partition = partitionNames[idx];
      realtime[partition] = res.realtime || { total: 0, Employee: 0, Contractor: 0 };
      today.total += res.today?.total || 0;
      today.Employee += res.today?.Employee || 0;
      today.Contractor += res.today?.Contractor || 0;
    });

    return { today, realtime };

  } catch (error) {
    console.error('Error fetching occupancy data:', error);
    return { today: {}, realtime: {} };
  }
};