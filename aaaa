listion carefully what is my requirement all pie chart is as it is require but only in this add Dublin,Rome and Moscow total, employee and contractores ok carefully and quiecly 


<Box display="flex" flexWrap="wrap" gap={1} mb={3}>
          {loading ? <LoadingSpinner />
            : summaryItems
              .filter(item => !['Dublin', 'Rome', 'Moscow'].includes(item.label)) // ⛔️ Remove unwanted cards
              .map(item => {
                const [tc, totc, ec, cc] = item.colors;
                // Pie data for Dublin, Rome, and Moscow only
                const pieCities = ['Dublin', 'Rome', 'Moscow'];

                const pieData = summaryItems
                  ?.filter(item => pieCities.includes(item.label))
                  .map(item => ({
                    name: item.label,
                    value: item.total
                  }));

                const slice1 = pieData.slice(0, 2); // Dublin & Rome
                const slice2 = pieData.slice(2);    // Moscow
                return (
                  <Box key={item.label} sx={{ flex: '1 1 calc(10.66% - 1px)' }}>
                    <SummaryCard
                      title={item.label}
                      total={item.total}
                      stats={[
                        { label: 'Employees', value: item.emp },
                        { label: 'Contractors', value: item.cont }
                      ]}
                      icon={
                        item.flag && (
                          <Box
                            component="img"
                            src={item.flag}
                            alt={item.label}
                            sx={{ width: 45, height: 25, border: '1px solid #fff' }}
                          />
                        )
                      }
                      titleColor={tc}
                      totalColor={totc}
                      statColors={[ec, cc]}
                      sx={{
                        height: 170,
                        border: `2px solid ${tc}`,
                        '& .MuiTypography-subtitle1': { fontSize: '1.1rem' },
                        '& .MuiTypography-h4': { fontSize: '1.5rem' },
                        '& .MuiTypography-caption': { fontSize: '0.875rem' }
                      }}
                    />
                  </Box>
                );
              })
          }
        </Box>




        {/* Live charts row */}
        <Box display="flex" gap={2} mb={4} flexWrap="wrap">

          {/* 1) Vilnius composite */}
          <Box flex="1 1 0" sx={{ border: '2px solid #FFC107', borderRadius: 2, p: 2, background: 'rgba(0,0,0,0.6)' }}>

            {loading ? (
              <Skeleton variant="rectangular" height={350} />
            ) : (
              <CompositeChartCard
                title="Vilnius "
                data={vilniusFloors}
                barColor="#4CAF50"
                lineColor="#FF0000"
                height={410}
                animationDuration={1500}
                animationEasing="ease-in-out"
              />
            )}
          </Box>






          {/* 2) Top regions donut */}
          <Box flex="1 1 0" sx={{ border: '2px solid #FFC107', borderRadius: 2, p: 2, background: 'rgba(0,0,0,0.6)' }}>

            {loading ? (
              <Skeleton variant="rectangular" height={350} />
            ) : (
              <PieChartCard
                title="Vienna • Abu Dhabi • Dublin • Rome"
                data={slice1}
                colors={['#4E79A7', '#F28E2B', '#E15759', '#76B7B2']}
                innerRadius={60}
                height={410}
                showZeroSlice
                animationDuration={1500}
                sx={{ title: { color: '#FFC107' } }}
              />
            )}
          </Box>

          {/* 3) Other regions donut */}
          <Box flex="1 1 0" sx={{ border: '2px solid #FFC107', borderRadius: 2, p: 2, background: 'rgba(0,0,0,0.6)' }}>

            {loading ? (
              <Skeleton variant="rectangular" height={350} />
            ) : (
              <PieChartCard
                title="Casablanca • Moscow • London • Madrid"
                data={slice2}
                colors={['#59A14F', '#EDC948', '#AF7AA1', '#EFBF04']}
                innerRadius={60}
                height={410}
                showZeroSlice
                animationDuration={1500}
              />
            )}
          </Box>

        </Box>
      </Container>


// src/components/SummaryCard.jsx

import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';

export default function SummaryCard({
  title,
  total,
  stats = [],
  icon,
  titleColor,
  totalColor,
  statColors = [],
  sx = {}
}) {
  return (
    <Card
      variant="outlined"
      sx={{
        px: 2,
        py: 1.5,
        border: titleColor ? `2px solid ${titleColor}` : undefined,
        borderRadius: 2,
        bgcolor: 'rgba(0,0,0,0.4)',
        overflow: 'hidden',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'translateY(-4px) scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)',
        },
        ...sx
      }}
    >
      <CardContent sx={{ p: 1 }}>

        {/* Title (left) + Icon (right) */}
        <Box display="flex" justifyContent="space-between" alignItems="center" mb={1}>
          <Typography
            variant="subtitle1"
            sx={{
              fontWeight: 'bold',
              fontSize: '1.2rem',
              color: titleColor || '#FFE599'
            }}
          >
            {title}
          </Typography>

          {icon && (
            <Box
              component="span"
              sx={{
                fontSize: 28,
                display: 'flex',
                alignItems: 'center',
                ml: 1
              }}
            >
              {icon}
            </Box>
          )}
        </Box>

        {/* Total */}
        {total != null && (
          <Typography
            variant="h4"
            align="center"
            sx={{
              color: totalColor || '#FFFFFF',
              fontWeight: 'bold',
              mb: 1,
              transition: 'color 0.3s'
            }}
          >
            {total}
          </Typography>
        )}

        {/* Stats */}
        {stats?.length > 0 && (
          <Box>
            {stats.map((stat, idx) => (
              <Box
                key={stat.label}
                display="flex"
                justifyContent="space-between"
                alignItems="center"
                mt={0.5}
              >
                <Typography
                  variant="body2"
                  fontWeight="bold"
                  fontSize={14}
                  sx={{
                    color: statColors?.[idx] || (stat.label === 'Employees' ? '#2ecc71' : '#ec7063')
                  }}
                >
                  {stat.label}
                </Typography>
                <Typography
                  variant="body2"
                  fontWeight="bold"
                  fontSize={18}
                  sx={{
                    color: statColors?.[idx] || (stat.label === 'Employees' ? '#2ecc71' : '#ec7063')
                  }}
                >
                  {stat.value}
                </Typography>
              </Box>
            ))}
          </Box>
        )}
      </CardContent>
    </Card>
  );
}
