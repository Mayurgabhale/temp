import React from 'react';
import {
  Card, CardContent, Typography, Box, Stack
} from '@mui/material';
import {
  PieChart, Pie, Cell, Tooltip, ResponsiveContainer
} from 'recharts';

const GRADIENT_COLORS = [
  'url(#grad1)', 'url(#grad2)', 'url(#grad3)', 'url(#grad4)', 'url(#grad5)'
];

// Define gradients
const GradientDefs = () => (
  <defs>
    <linearGradient id="grad1" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stopColor="#42A5F5" />
      <stop offset="100%" stopColor="#1E88E5" />
    </linearGradient>
    <linearGradient id="grad2" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stopColor="#66BB6A" />
      <stop offset="100%" stopColor="#388E3C" />
    </linearGradient>
    <linearGradient id="grad3" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stopColor="#FFA726" />
      <stop offset="100%" stopColor="#FB8C00" />
    </linearGradient>
    <linearGradient id="grad4" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stopColor="#AB47BC" />
      <stop offset="100%" stopColor="#8E24AA" />
    </linearGradient>
    <linearGradient id="grad5" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stopColor="#26C6DA" />
      <stop offset="100%" stopColor="#0097A7" />
    </linearGradient>
  </defs>
);

// Tooltip styling
const CustomTooltip = ({ active, payload }) => {
  if (active && payload?.length) {
    const { name, value } = payload[0];
    return (
      <Box sx={{
        bgcolor: '#121212',
        px: 2,
        py: 1,
        borderRadius: 1,
        color: '#fff',
        border: '1px solid #444'
      }}>
        <Typography variant="body2"><strong>{name}</strong>: {value}</Typography>
      </Box>
    );
  }
  return null;
};

const PieChartCard = ({
  title,
  data,
  height = 360,
  outerRadius = 90,
  innerRadius = 60,
}) => {
  const total = data.reduce((sum, item) => sum + item.value, 0);

  return (
    <Card
      sx={{
        background: 'rgba(30, 30, 30, 0.95)',
        border: '1px solid #333',
        borderRadius: 3,
        boxShadow: '0 4px 20px rgba(0,0,0,0.4)',
        color: '#fff',
        backdropFilter: 'blur(4px)',
        overflow: 'hidden',
        minHeight: 440
      }}
    >
      <CardContent>
        {title && (
          <Typography
            variant="h6"
            sx={{ color: '#FFC107', mb: 2, fontWeight: 600 }}
          >
            {title}
          </Typography>
        )}

        <Box position="relative" height={height}>
          <ResponsiveContainer width="100%" height="100%">
            <PieChart>
              <GradientDefs />
              <Pie
                data={data}
                dataKey="value"
                nameKey="name"
                cx="50%"
                cy="50%"
                innerRadius={innerRadius}
                outerRadius={outerRadius}
                paddingAngle={2}
                isAnimationActive
                animationDuration={900}
                stroke="#1E1E1E"
              >
                {data.map((entry, index) => (
                  <Cell
                    key={`cell-${index}`}
                    fill={GRADIENT_COLORS[index % GRADIENT_COLORS.length]}
                  />
                ))}
              </Pie>
              <Tooltip content={<CustomTooltip />} />
            </PieChart>
          </ResponsiveContainer>

          {/* Center Total */}
          <Box
            position="absolute"
            top="50%"
            left="50%"
            sx={{
              transform: 'translate(-50%, -50%)',
              textAlign: 'center'
            }}
          >
            <Typography variant="h4" sx={{ color: '#fff', fontWeight: 600 }}>
              {total}
            </Typography>
            <Typography variant="body2" sx={{ color: '#ccc' }}>
              Total
            </Typography>
          </Box>
        </Box>

        {/* Bottom Labels */}
        <Stack
          direction="row"
          justifyContent="center"
          spacing={4}
          mt={3}
          flexWrap="wrap"
        >
          {data.map((item, index) => (
            <Box
              key={index}
              display="flex"
              alignItems="center"
              sx={{ color: '#ccc', fontSize: 14 }}
            >
              <Box
                sx={{
                  width: 12,
                  height: 12,
                  background: GRADIENT_COLORS[index % GRADIENT_COLORS.length],
                  borderRadius: '50%',
                  mr: 1
                }}
              />
              {item.name}: <strong style={{ marginLeft: 4 }}>{item.value}</strong>
            </Box>
          ))}
        </Stack>
      </CardContent>
    </Card>
  );
};

export default PieChartCard;