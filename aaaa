// src/pages/Dashboard.jsx
import React from 'react';
import {
  Container, Box, Typography, Skeleton,
  Paper
} from '@mui/material';

import Header from '../components/Header';
import Footer from '../components/Footer';

import SummaryCard from '../components/SummaryCard';
import CompositeChartCard from '../components/CompositeChartCard';
import PieChartCard from '../components/PieChartCard';

import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import { partitionList } from '../services/occupancy.service';
import buildingCapacities from '../data/buildingCapacities';


import indiaFlag from '../assets/flags/india.png';
import japanFlag from '../assets/flags/japan.png';
import malaysiaFlag from '../assets/flags/malaysia.png';
import philippinesFlag from '../assets/flags/philippines.png';
import taguigFlag from '../assets/flags/Taguig.png';

const palette15 = [
  '#FFC107','#E91E63','#4CAF50','#FFEB3B','#FFD666',
  '#D84315','#3F51B5','#9C27B0','#00BCD4','#8BC34A',
  '#FF9800','#673AB7','#009688','#CDDC39','#795548'
];

const flagMap = {
  'Pune': indiaFlag,
  'Quezon City': philippinesFlag,
  'JP.Tokyo': japanFlag,
  'MY.Kuala Lumpur': malaysiaFlag,
  'Taguig City': philippinesFlag
};

export default function Dashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);

  if (error) {
    return (
      <Box width="100vw" py={4}>
        <Typography color="error" align="center">
          Error loading live data
        </Typography>
      </Box>
    );
  }

  const regions = data?.realtime || {};
  const partitions = partitionList
    .map(name => {
      const key = Object.keys(regions).find(k => k.includes(name));
      const p = key ? regions[key] : {};
      return {
        name,
        total: p.total || 0,
        Employee: p.Employee || 0,
        Contractor: p.Contractor || 0,
        floors: p.floors || {}
      };
    })
    .sort((a, b) => b.total - a.total);

  const todayTot = data?.today?.total || 0;
  const todayEmp = data?.today?.Employee || 0;
  const todayCont = data?.today?.Contractor || 0;
  const realtimeTot = partitions.reduce((sum, p) => sum + p.total, 0);
  const realtimeEmp = partitions.reduce((sum, p) => sum + p.Employee, 0);
  const realtimeCont = partitions.reduce((sum, p) => sum + p.Contractor, 0);

  const pune = partitions.find(p => p.name === 'Pune');
  const quezonCity = partitions.find(p => p.name === 'Quezon City');
  const combinedRegions = partitions.filter(p =>
    ['JP.Tokyo', 'MY.Kuala Lumpur', 'Taguig City'].includes(p.name)
  );

  const floors = Object.entries(pune?.floors || {});

  const chartConfigs = [
    {
      key: 'pune',
      title: 'Pune Composite Chart',
      body: pune?.total === 0
        ? (
          <Typography color="white" align="center" py={6}>
            No Pune data
          </Typography>
        )
        : (
          <CompositeChartCard
            data={floors.map(([f, h]) => ({
              name: f,
              headcount: h,
              capacity: buildingCapacities[f] || 0
            }))}
            lineColor={palette15[0]}
            height={300}
            sx={{ border: 'none' }}
          />
        )
    },
    {
      key: 'quezon',
      title: 'Quezon City',
      body: quezonCity?.total === 0
        ? (
          <Typography color="white" align="center" py={6}>
            No Quezon City data
          </Typography>
        )
        : (
          <PieChartCard
            data={[
              { name: 'Employees', value: quezonCity.Employee },
              { name: 'Contractors', value: quezonCity.Contractor }
            ]}
            colors={[palette15[5], palette15[6]]}
            height={300}
            showZeroSlice
            sx={{ border: 'none' }}
          />
        )
    },
    {
      key: 'combined',
      title: 'Asia-Pacific',
      body: combinedRegions.length === 0
        ? (
          <Typography color="white" align="center" py={6}>
            No regional data
          </Typography>
        )
        : (
          <PieChartCard
            data={combinedRegions.map(r => ({
              name: r.name.replace(/^.*\./, ''),  // strip country code
              value: r.total
            }))}
            colors={[palette15[2], palette15[3], palette15[4]]}
            height={300}
            showZeroSlice
            sx={{ border: 'none' }}
          />
        )
    }
  ];

  return (
    <>
      <Header title="APAC Live Occupancy" />
      <Container
        maxWidth={false}
        disableGutters
        sx={{ py: 3, px: 2, background: 'rgba(0, 0, 0, 0.93)' }}
      >
        {/* Top Summary Cards */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={2}>
          {[
  {
    title: "Today's Total Headcount",
    value: todayTot,
    icon: <i className="fa-solid fa-users" style={{ fontSize: 25 }} />,
    border: '#FFB300',
  },
  {
    title: "Today's Employees Count",
    value: todayEmp,
    icon: <i className="bi bi-people" style={{ fontSize: 25 }} />,
    border: '#8BC34A'
  },
  {
    title: "Today's Contractors Count",
    value: todayCont,
    icon: <i className="fa-solid fa-circle-user" style={{ fontSize: 25 }} />,
    border: '#E57373'
  },
  {
    title: "Realtime Headcount",
    value: realtimeTot,
    icon: <i className="fa-solid fa-users" style={{ fontSize: 25 }} />,
    border: '#FFD180'
  },
  {
    title: "Realtime Employees Count",
    value: realtimeEmp,
    icon: <i className="bi bi-people" style={{ fontSize: 25 }} />,
    border: '#AED581'
  },
  {
    title: "Realtime Contractors Count",
    value: realtimeCont,
    icon: <i className="fa-solid fa-circle-user" style={{ fontSize: 25 }} />,
    border: '#EF5350'
  }
].map(c => (
  <Box key={c.title} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
    <SummaryCard
      title={c.title}
      total={c.value}
      stats={[]}
      icon={c.icon}
      sx={{ height: 140, border: `2px solid ${c.border}` }}
    />
  </Box>
))}
        </Box>

        {/* Region Cards */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={3}>
          {loading
            ? <Skeleton variant="rectangular" width="90%" height={200} />
            : partitions.map(p => (
              <Box
                key={p.name}
                sx={{ flex: '1 1 calc(16.66% - 8px)' }}
              >
                <SummaryCard
                  title={p.name.replace(/^.*\./, '')}
                  total={p.total}
                  stats={[
                    { label: 'Employees', value: p.Employee },
                    { label: 'Contractors', value: p.Contractor }
                  ]}
                  sx={{ width: '100%', border: '1px solid #FFB300' }}
                  icon={<Box component="img" src={p.flag} sx={{ width:48, height:32 }} />}
                  
                />
              </Box>
            ))
          }

        </Box>

        {/* Main Charts Section */}
        <Box display="flex" gap={2} flexWrap="wrap" mb={4}>
          {chartConfigs.map(({ key, title, body }) => (
            <Box
              key={key}
              sx={{
                flex: '1 1 32%',
                minWidth: 280,
                height: 380,
                animation: 'fadeInUp 0.5s'
              }}
            >
              <Paper
                sx={{
                  p: 2,
                  height: '100%',
                  background: 'rgba(0,0,0,0.4)',
                  border: '1px solid #FFC107',
                  display: 'flex',
                  flexDirection: 'column'
                }}
              >
                <Typography variant="h6" align="center" sx={{ color: '#FFC107', mb: 2 }}>
                  {title}
                </Typography>
                <Box sx={{ flex: 1, overflow: 'hidden' }}>
                  {body}
                </Box>
              </Paper>
            </Box>
          ))}
        </Box>
      </Container>
      <Footer />
      
    </>
  );
}



// .
// .
// .




