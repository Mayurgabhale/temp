import React, { useEffect, useState } from 'react';
import { Container, Box, Typography, Skeleton } from '@mui/material';
import Header from '../components/Header';
import Footer from '../components/Footer';
import SummaryCard from '../components/SummaryCard';
import CompositeChartCard from '../components/CompositeChartCard';
import PieChartCard from '../components/PieChartCard';
import LoadingSpinner from '../components/LoadingSpinner';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';
import doorMapRaw from '../utils/doorMap';

// APAC Flags
import indiaFlag from '../assets/flags/IN.India.png';
import singaporeFlag from '../assets/flags/singapore.png';
import philippinesFlag from '../assets/flags/philippines.png';
import malaysiaFlag from '../assets/flags/malaysia.png';
import chinaFlag from '../assets/flags/china.png';

// APAC site config
const partitions = [
  'IN.Pune', 'SG.Singapore', 'PH.Manila', 'MY.KualaLumpur', 'CN.Beijing'
];

const displayName = {
  'IN.Pune': 'Pune',
  'SG.Singapore': 'Singapore',
  'PH.Manila': 'Manila',
  'MY.KualaLumpur': 'Kuala Lumpur',
  'CN.Beijing': 'Beijing'
};

const flagMap = {
  'IN.Pune': indiaFlag,
  'SG.Singapore': singaporeFlag,
  'PH.Manila': philippinesFlag,
  'MY.KualaLumpur': malaysiaFlag,
  'CN.Beijing': chinaFlag
};

const colorsMap = {
  'IN.Pune': ['#FFD666', '#FFF2CC', '#2ecc71', '#ec7063'],
  'SG.Singapore': ['#FFE599', '#FFF2CC', '#2ecc71', '#ec7063'],
  'PH.Manila': ['#FFF2CC', '#fcf3cf', '#2ecc71', '#ec7063'],
  'MY.KualaLumpur': ['#FFD666', '#fcf3cf', '#2ecc71', '#ec7063'],
  'CN.Beijing': ['#FFE599', '#fcf3cf', '#2ecc71', '#ec7063']
};

export default function APACDashboard() {
  const { data, loading, error } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  if (error) {
    return <Box py={4}><Typography color="error" align="center">Error loading live data</Typography></Box>;
  }

  const todayTot = data?.today.total || 0;
  const todayEmp = data?.today.Employee || 0;
  const todayCon = data?.today.Contractor || 0;

  const realtimeTot = Object.values(data?.realtime || {}).reduce((s, x) => s + (x.total || 0), 0);
  const realtimeEmp = Object.values(data?.realtime || {}).reduce((s, x) => s + (x.Employee || 0), 0);
  const realtimeCon = Object.values(data?.realtime || {}).reduce((s, x) => s + (x.Contractor || 0), 0);

  const slice1 = partitions.slice(0, 3).map(k => ({ name: displayName[k], value: data?.realtime?.[k]?.total || 0 }));
  const slice2 = partitions.slice(3).map(k => ({ name: displayName[k], value: data?.realtime?.[k]?.total || 0 }));

  const summaryItems = partitions.map(k => {
    const x = data?.realtime[k] || {};
    return {
      label: displayName[k],
      total: x.total || 0,
      emp: x.Employee || 0,
      cont: x.Contractor || 0,
      flag: flagMap[k],
      colors: colorsMap[k]
    };
  });

  return (
    <>
      <Header />
      <Container maxWidth={false} disableGutters sx={{ px: 2, py: 1 }}>

        {/* Summary Headcounts */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={2}>
          {[
            { title: "Today's Total Headcount", value: todayTot, icon: <i className="fa-solid fa-users" style={{ color: '#E57373', fontSize: 25 }} />, border: '#FFD666' },
            { title: "Today's Employees Count", value: todayEmp, icon: <i className="bi bi-people" style={{ color: '#81C784', fontSize: 25 }} />, border: '#81C784' },
            { title: "Today's Contractors Count", value: todayCon, icon: <i className="fa-solid fa-circle-user" style={{ color: '#81C784', fontSize: 25 }} />, border: '#FFE599' },
            { title: "Realtime Headcount", value: realtimeTot, icon: <i className="fa-solid fa-users" style={{ color: '#BA68C8', fontSize: 25 }} />, border: '#FFF2CC' },
            { title: "Realtime Employees Count", value: realtimeEmp, icon: <i className="bi bi-people" style={{ color: '#81C784', fontSize: 25 }} />, border: '#FFD666' },
            { title: "Realtime Contractors Count", value: realtimeCon, icon: <i className="fa-solid fa-circle-user" style={{ color: '#BA68C8', fontSize: 25 }} />, border: '#FFE599' }
          ].map(c => (
            <Box key={c.title} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
              <SummaryCard
                title={c.title}
                total={c.value}
                stats={[]}
                icon={c.icon}
                sx={{ height: 140, border: `2px solid ${c.border}` }}
              />
            </Box>
          ))}
        </Box>

        {/* Site Summaries */}
        <Box display="flex" flexWrap="wrap" gap={1} mb={4}>
          {loading ? <LoadingSpinner /> : summaryItems.map(item => {
            const [tc, totc, ec, cc] = item.colors;
            return (
              <Box key={item.label} sx={{ flex: '1 1 calc(16% - 8px)' }}>
                <SummaryCard
                  title={item.label}
                  total={item.total}
                  stats={[{ label: 'Employees', value: item.emp }, { label: 'Contractors', value: item.cont }]}
                  icon={item.flag && <Box component="img" src={item.flag} alt={item.label} sx={{ width: 50, height: 30, border: '1px solid #fff' }} />}
                  titleColor={tc} totalColor={totc} statColors={[ec, cc]}
                  sx={{
                    height: 180,
                    border: `2px solid ${tc}`,
                    '& .MuiTypography-subtitle1': { fontSize: '1.3rem' },
                    '& .MuiTypography-h4': { fontSize: '1.7rem' },
                    '& .MuiTypography-caption': { fontSize: '0.875rem' }
                  }}
                />
              </Box>
            );
          })}
        </Box>

        {/* Charts */}
        <Box display="flex" gap={2} mb={4} flexWrap="wrap">
          <Box flex="1 1 0" sx={{ border: '2px solid #FFC107', borderRadius: 2, p: 2, background: 'rgba(0,0,0,0.6)' }}>
            {loading ? <Skeleton variant="rectangular" height={350} /> : (
              <PieChartCard
                title="Pune • Singapore • Manila"
                data={slice1}
                colors={['#4E79A7', '#F28E2B', '#E15759']}
                innerRadius={60}
                height={410}
                showZeroSlice
                animationDuration={1500}
              />
            )}
          </Box>

          <Box flex="1 1 0" sx={{ border: '2px solid #FFC107', borderRadius: 2, p: 2, background: 'rgba(0,0,0,0.6)' }}>
            {loading ? <Skeleton variant="rectangular" height={350} /> : (
              <PieChartCard
                title="Kuala Lumpur • Beijing"
                data={slice2}
                colors={['#59A14F', '#EDC948']}
                innerRadius={60}
                height={410}
                showZeroSlice
                animationDuration={1500}
              />
            )}
          </Box>
        </Box>
      </Container>

      <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6'
        }}
      >
        <div>
          <strong>Global Security Operations Center (GSOC)</strong><br />
          Live Occupancy dashboard for APAC — Real-time occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us: <a href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com" style={{ color: '#FFC72C', textDecoration: 'underline' }}>gsoc@westernunion.com</a> |
          Landline: <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>
    </>
  );
}
