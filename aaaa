<Box display="flex" flexWrap="wrap" gap={1} mb={3}>
  {loading ? <LoadingSpinner />
    : summaryItems
        .filter(item => !['Dublin', 'Rome', 'Moscow'].includes(item.label)) // ⛔️ Remove unwanted cards
        .map(item => {
          const [tc, totc, ec, cc] = item.colors;
          return (
            <Box key={item.label} sx={{ flex: '1 1 calc(10.66% - 1px)' }}>
              <SummaryCard
                title={item.label}
                total={item.total}
                stats={[
                  { label: 'Employees', value: item.emp },
                  { label: 'Contractors', value: item.cont }
                ]}
                icon={
                  item.flag && (
                    <Box
                      component="img"
                      src={item.flag}
                      alt={item.label}
                      sx={{ width: 45, height: 25, border: '1px solid #fff' }}
                    />
                  )
                }
                titleColor={tc}
                totalColor={totc}
                statColors={[ec, cc]}
                sx={{
                  height: 170,
                  border: `2px solid ${tc}`,
                  '& .MuiTypography-subtitle1': { fontSize: '1.1rem' },
                  '& .MuiTypography-h4': { fontSize: '1.5rem' },
                  '& .MuiTypography-caption': { fontSize: '0.875rem' }
                }}
              />
            </Box>
          );
        })
  }
</Box>