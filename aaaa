

<Box display="flex" flexWrap="wrap" gap={1} mb={3}>
          {loading
            ? <Skeleton variant="rectangular" width="90%" height={200} />
            :
            partitions.map((p, index) => (
              <Box
                key={p.name}
                sx={{ flex: '1 1 calc(16.66% - 8px)' }}
              >
                <SummaryCard
                  title={
                    <Typography
                      variant="subtitle1"
                      sx={{
                        fontWeight: 'bold',
                        color: '#FFC107',  // Change this to your desired color
                        fontSize: '1.3rem'
                      }}
                    >
                      {p.name.replace(/^.*\./, '')}
                    </Typography>
                  }
                  total={p.total}
                  stats={[
                    { label: 'Employees',  value: p.Employee, color: '#40E0D0' },
                    { label: 'Contractors', value: p.Contractor, color: 'green' }
                  ]}
                  sx={{
                    width: '100%',
                    border: `2px solid ${palette15[index % palette15.length]}`
                  }}
                  icon={
                    <Box
                      component="img"
                      src={p.flag}
                      sx={{ width: 48, height: 32 }}
                    />
                  }
                />
              </Box>
            ))
          }

        </Box>


  {stats.map(stat => (
          <Box key={stat.label} display="flex" justifyContent="space-between" mt={1}>
            {/* Label with stat.color */}
            <Typography
              variant="body2"
              fontWeight="bold"
              fontSize={18}
              sx={{ color: stat.label === 'Employees' ? '#2ecc71' : '#ec7063' }}
            >
              {stat.label}
            </Typography>

            {/* Value with same stat.color */}
            <Typography
              variant="body2"
              fontWeight="bold"
              fontSize={22}
              sx={{ color: stat.label === 'Employees' ? '#2ecc71' : '#ec7063' }}
            >
              {stat.value}
            </Typography>
          </Box>
        ))}


read the above code and create summery card layout same as above apac code carefully only layout can change same to same above



.......



        <Box display="flex" flexWrap="wrap" gap={1} mb={3}>
          {loading ? <LoadingSpinner />
            : summaryItems.map(item => {
              const [tc, totc, ec, cc] = item.colors;
              return (
                // <Box key={item.label} sx={{ flex: '1 1 calc(16.66% - 8px)' }}>
                <Box key={item.label} sx={{ flex: '1 1 calc(10.66% - 1px)' }}>
                  <SummaryCard
                    title={item.label}
                    total={item.total}
                    stats={[{ label: 'Employees', value: item.emp }, { label: 'Contractors', value: item.cont }]}
                    icon={item.flag && <Box component="img" src={item.flag} alt={item.label} sx={{ width: 45, height: 25, border: '1px solid #fff' }} />}
                    titleColor={tc} totalColor={totc} statColors={[ec, cc]}
                    sx={{
                      height: 170,
                      border: `2px solid ${tc}`,
                      '& .MuiTypography-subtitle1': { fontSize: '1.1rem' },
                      '& .MuiTypography-h4': { fontSize: '1.5rem' },
                      '& .MuiTypography-caption': { fontSize: '0.875rem' }
                    }}
                  />
                </Box>
              )
            })
          }
        </Box>


<Card
      variant="outlined"
      sx={{
        px: 2,
        py: 1,
        border: titleColor ? `2px solid ${titleColor}` : undefined,
        borderRadius: 2,
        bgcolor: 'rgba(0,0,0,0.4)',
        overflow: 'hidden',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'translateY(-4px) scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)',
        },
        ...sx
      }}
    >
      <CardContent sx={{ textAlign: 'center', p: 1 }}>
        {/* Icon + Title */}
        
        <Box display="flex" justifyContent="center" alignItems="center" mb={1}>
          {icon && (
            <Box
              component="span"
              sx={{
                mr: 1,
                fontSize: 32,
                color: titleColor || 'primary.main',
                display: 'flex',
                alignItems: 'center',
              }}
            >
              {icon}
            </Box>
          )}
          <Typography
            variant="subtitle1"
            gutterBottom
            sx={titleColor ? { color: titleColor } : undefined}
          >
            {title}
          </Typography>
        </Box>




        {/* Total */}
        {total != null && (
          <Box display="flex" justifyContent="center" alignItems="baseline" mb={1}>
            <Typography
              variant="h4"
              sx={{
                mr: 1,
                ...(totalColor ? { color: totalColor } : undefined),
                transition: 'color 0.3s'
              }}
            >
              {total}
            </Typography>
          </Box>
        )}

        {/* Stats */}
        <Grid container spacing={1} justifyContent="center">
          {stats.map(({ label, value }, idx) => (
            <Grid key={label} item xs={6}>
              <Typography
                variant="caption"
                sx={
                  statColors[idx]
                    ? { color: statColors[idx], transition: 'color 0.3s' }
                    : {}
                }
              >
                {label}
              </Typography>
              <Typography
                variant="h6"
                sx={
                  statColors[idx]
                    ? { color: statColors[idx], transition: 'color 0.3s' }
                    : {}
                }
              >
                {value}
              </Typography>
            </Grid>
          ))}
        </Grid>

        
      </CardContent>
    </Card>
