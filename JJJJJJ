



{stats && (
  <div className="stats-grid">
    {[
      ['Total Profiles', stats.TotalProfiles],
      ['Active Profiles', stats.ActiveProfiles],
      ['Active Employees', stats.ActiveEmployees],
      ['Active Contractors', stats.ActiveContractors],
      ['Terminated Profiles', stats.TerminatedProfiles],
      ['Terminated Employees', stats.TerminatedEmployees],
      ['Terminated Contractors', stats.TerminatedContractors],
    ].map(([label, val]) => (
      <div key={label} className="stat-box">
        <h3>{label}</h3>
        <p>{val}</p>
      </div>
    ))}
  </div>
)}




....



const [stats, setStats] = useState(null);
// ...
useEffect(() => {
  axios.get('http://localhost:5001/api/stats')
    .then(res => setStats(res.data))
    .catch(err => console.error('❌ Stats load failed', err));
}, []);




.....
const { getEmployeeStats } = require('../controllers/employeeController');
// ... other routes
router.get('/stats', getEmployeeStats);





....
// At the end of controllers/employeeController.js
const getEmployeeStats = async (req, res) => {
  try {
    const pool = await getPool();
    const result = await pool.request().query(`
      SELECT
        COUNT(*) AS TotalProfiles,
        SUM(CASE WHEN AP.Disabled = 0 THEN 1 ELSE 0 END) AS ActiveProfiles,
        SUM(CASE WHEN AP.Disabled = 0 AND PT.Name = 'Employee' THEN 1 ELSE 0 END) AS ActiveEmployees,
        SUM(CASE WHEN AP.Disabled = 0 AND PT.Name = 'Contractor' THEN 1 ELSE 0 END) AS ActiveContractors,
        SUM(CASE WHEN AP.Disabled = 1 THEN 1 ELSE 0 END) AS TerminatedProfiles,
        SUM(CASE WHEN AP.Disabled = 1 AND PT.Name = 'Employee' THEN 1 ELSE 0 END) AS TerminatedEmployees,
        SUM(CASE WHEN AP.Disabled = 1 AND PT.Name = 'Contractor' THEN 1 ELSE 0 END) AS TerminatedContractors
      FROM ACVSCore.Access.Personnel AP
      INNER JOIN ACVSCore.Access.PersonnelType PT ON PT.ObjectID = AP.PersonnelTypeID
    `);
    res.json(result.recordset[0]);
  } catch (err) {
    console.error('❌ getEmployeeStats error', err.stack || err);
    res.status(500).json({ error: 'Failed to get stats' });
  }
};

module.exports.getEmployeeStats = getEmployeeStats;