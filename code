import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  LabelList,
  Cell
} from 'recharts';

const DARK_TO_LIGHT = [
  '#FFD666', '#FFE599', '#FFF2CC', '#FFE599', '#E0E1DD',
  '#FFD666', '#FFEE8C', '#F8DE7E', '#FBEC5D', '#F0E1DC',
  '#FFEE8C', '#21325E', '#415A77', '#6A7F9A', '#B0C4DE',
  '#1A1F36', '#2B3353', '#4C6482', '#7B90B2', '#CAD3E9'
];

export default function CompositeChartCard({
  title,
  data,
  barColor = '#4CAF50',
  lineColor = '#FFEB3B',
  height = 300,
  animationDuration = 1500,
  animationEasing = 'ease-in-out'
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card sx={{ border: `2px solid ${lineColor}`, bgcolor: 'rgba(0,0,0,0.6)' }}>
        <CardContent>
          <Typography variant="subtitle1" align="center" color="text.secondary">
            {title}
          </Typography>
          <Typography variant="body2" align="center" sx={{ mt: 4 }}>
            No realtime employee data
          </Typography>
        </CardContent>
      </Card>
    );
  }

  const enriched = data.map((d, i) => ({
    ...d,
    percentage: d.capacity ? Math.round((d.headcount / d.capacity) * 100) : 0,
    _color: DARK_TO_LIGHT[i % DARK_TO_LIGHT.length]
  }));

  return (
    <Card
      sx={{
        border: `2px solid ${lineColor}`,
        borderRadius: 2,
        overflow: 'hidden',
        bgcolor: 'rgba(0,0,0,0.6)',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)'
        }
      }}
    >
      <CardContent sx={{ p: 1 }}>
        <Typography variant="subtitle1" align="center" gutterBottom color="text.primary">
          {title}
        </Typography>
        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart
              data={enriched}
              margin={{ top: 10, right: 20, left: 0, bottom: 20 }}
            >
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.2)" />

              <XAxis
                dataKey="name"
                axisLine={false}
                tickLine={false}
                stroke="rgba(255,255,255,0.6)"
                tickFormatter={label =>
                  typeof label === 'string'
                    ? label.replace(/^[^\s]*\s*/, '')
                    : label
                }
              />

              <YAxis
                yAxisId="left"
                axisLine={false}
                tickLine={false}
                stroke="rgba(255,255,255,0.6)"
              />

              <YAxis
                yAxisId="right"
                orientation="right"
                axisLine={false}
                tickLine={false}
                stroke="rgba(255,255,255,0.6)"
                domain={[0, 100]}
                tickFormatter={val => `${val}%`}
              />

              <Tooltip
                contentStyle={{ backgroundColor: '#FFD666', borderColor: lineColor }}
                formatter={(value, name) => {
                  if (name === 'percentage') return [`${value}%`, 'Usage %'];
                  if (name === 'capacity') return [value, 'Seat Capacity'];
                  return [value, name];
                }}
              />

              <Legend verticalAlign="top" wrapperStyle={{ color: 'rgba(255,255,255,0.8)' }} />

              <Bar
                yAxisId="left"
                dataKey="headcount"
                name="Headcount"
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              >
                {enriched.map((entry, idx) => (
                  <Cell key={`cell-${idx}`} fill={entry._color} />
                ))}
                <LabelList
                  dataKey="headcount"
                  position="top"
                  formatter={val => `${val}`}
                  style={{ fill: '#fff', fontSize: 14, fontWeight: 700 }}
                />
              </Bar>

              <Line
                yAxisId="right"
                type="monotone"
                dataKey="percentage"
                name="Usage %"
                stroke={lineColor}
                strokeWidth={2}
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />

              <Line
                yAxisId="left"
                // type="monotone"
                // dataKey="capacity"
                name="Seat Capacity"
                stroke="#81C784"
                strokeDasharray="5 5"
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />
            </ComposedChart>
          </ResponsiveContainer>
        </Box>
      </CardContent>
    </Card>
  );
}



// 
