

<Bar
  yAxisId="left"
  dataKey="headcount"
  name="Headcount"
  isAnimationActive
  animationDuration={animationDuration}
  animationEasing={animationEasing}
>
  {enriched.map((entry, idx) => (
    <Cell key={`cell-${idx}`} fill={entry._color} />
  ))}
  <LabelList
    dataKey="percentage"
    position="top"
    formatter={(val) => `${val}%`}
    style={{ fill: '#fff', fontSize: 14, fontWeight: 700 }}
  />
</Bar>




....


<XAxis
  dataKey="name"
  stroke="rgba(255,255,255,0.6)"
  textAnchor="end"
  angle={-35}
  height={60}
  tickFormatter={(label, index) => {
    const strLabel = String(label);
    const match = strLabel.match(/\d+/);
    const floorNum = parseInt(match?.[0] ?? index + 1, 10);

    const suffix = (n) => {
      if (n % 100 >= 11 && n % 100 <= 13) return `${n}th`;
      switch (n % 10) {
        case 1: return `${n}st`;
        case 2: return `${n}nd`;
        case 3: return `${n}rd`;
        default: return `${n}th`;
      }
    };

    return suffix(floorNum);
  }}
/>