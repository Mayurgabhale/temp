<XAxis
  dataKey="name"
  tickLine={false}
  axisLine={false}
  stroke="rgba(255,255,255,0.6)"
  tickFormatter={(label, index) => {
    const strLabel = String(label);
    const match = strLabel.match(/\d+/); // Extract number from label like "Floor 3"
    const floorNum = parseInt(match?.[0], 10);

    if (isNaN(floorNum)) return strLabel; // fallback to raw label if no number found

    const suffix = (n) => {
      if (n % 100 >= 11 && n % 100 <= 13) return `${n}th`;
      switch (n % 10) {
        case 1: return `${n}st`;
        case 2: return `${n}nd`;
        case 3: return `${n}rd`;
        default: return `${n}th`;
      }
    };

    return suffix(floorNum);
  }}
/>