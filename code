const partitionRows = useMemo(() => {
  if (!summaryEntry || !summaryEntry.partitions) return [];

  const codeToCountry = {
    AUT: 'Austria', DU: 'UAE', IE: 'Ireland', IT: 'Italy',
    LT: 'Lithuania', MA: 'Morocco', RU: 'Russia', UK: 'UK', ES: 'Spain'
  };

  return Object.entries(summaryEntry.partitions)
    .filter(([key]) => !filterCode || key.startsWith(filterCode + '.'))
    .map(([key, vals]) => {
      const [code, site] = key.split('.');
      const employee = vals.Employee ?? vals.EmployeeCount ?? 0;
      const contractor = vals.Contractor ?? vals.ContractorCount ?? 0;
      return {
        country: codeToCountry[code] || code,
        site,
        employee,
        contractor,
        total: vals.total ?? (employee + contractor)
      };
    });
}, [summaryEntry, filterCode]);