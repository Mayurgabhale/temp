C:\Users\W0024618\Desktop\employee-verification\frontend\src\components\SearchBar.jsx

import React from 'react';

export default function SearchBar({ value, onChange, onSearch }) {
  return (
    <form onSubmit={e => { e.preventDefault(); onSearch(); }}>
      <input
        type="text"
        placeholder="Search by Name or EmpID"
        value={value}
        onChange={e => onChange(e.target.value)}
      />
      <button type="submit">Search</button>
    </form>
  );
}




C:\Users\W0024618\Desktop\employee-verification\frontend\src\App.js

// src/App.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import SearchBar from './components/SearchBar';
import EmployeeCard from './components/EmployeeCard';
import './App.css';
import wulogo from './assets/img/WU-logo.png';
function App() {
  const [searchTerm, setSearchTerm] = useState('');
  const [allEmployees, setAllEmployees] = useState([]);
  const [selected, setSelected] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [suggestions, setSuggestions] = useState([]);
  const [history, setHistory] = useState([]);
  const [stats, setStats] = useState(null);

  // Load all employees once
  useEffect(() => {
    setLoading(true);
    axios.get('http://localhost:5001/api/employees')
      .then(res => setAllEmployees(res.data))
      .catch(() => setError('Failed to load employees'))
      .finally(() => setLoading(false));
  }, []);



  useEffect(() => {
    axios.get('http://localhost:5001/api/stats')
      .then(res => setStats(res.data))
      .catch(err => console.error('❌ Stats load failed', err));
  }, []);


  // Live suggestions as you type
  useEffect(() => {
    const term = searchTerm.trim().toLowerCase();
    if (!term) {
      setSuggestions([]);
      return;
    }
    const matches = allEmployees.filter(emp =>
      (emp.EmployeeID || '').toLowerCase().includes(term) ||
      (emp.EmpName || '').toLowerCase().includes(term)
    );
    setSuggestions(matches.slice(0, 10));
  }, [searchTerm, allEmployees]);

  // When user submits exact search
  const handleSearch = () => {
    setError('');
    const term = searchTerm.trim().toLowerCase();
    if (!term) return setError('Please enter name or ID');

    const found = allEmployees.find(emp =>
      (emp.EmployeeID || '').toLowerCase() === term ||
      (emp.EmpName || '').toLowerCase().includes(term)
    );

    if (!found) {
      setSelected(null);
      setError('No matching employee');
    } else {
      selectEmployee(found);
      setSuggestions([]); // clear suggestions
    }
  };

  // Common logic when selecting an employee from search or history
  const selectEmployee = emp => {
    setSelected(emp);
    setSearchTerm(emp.EmpName);
    setHistory(prev => {
      if (prev.find(e => e.id === emp.id)) return prev;
      return [emp, ...prev];
    });
  };

  // Click a suggestion
  const pickSuggestion = emp => {
    selectEmployee(emp);
  };

  // Click a history item
  const pickHistory = emp => {
    selectEmployee(emp);
  };

  return (
    <div>
      <header className="header">
        <div className="header-content">
          <img src={wulogo} alt="WU Logo" className="logo" />
          <div>
            <h1>Associate Verification Tool</h1>
            <p>Pune Technology Engineering Center • Mon–Fri, 9:00–18:00</p>
          </div>
        </div>
      </header>

      <div className="main-container">

       
        <div className="left-panel">
          <div className="search-bar">
            <SearchBar
              value={searchTerm}
              onChange={setSearchTerm}
              onSearch={handleSearch}
            />
          </div>
          {loading && <p>Loading…</p>}
          {error && <p className="error">{error}</p>}
          {selected && <EmployeeCard emp={selected} />}
        </div>


        



        <div className="right-panel">
          <div className="lists-container">
            <div className="history-list">
              <h3>Related Results</h3>
              <ul>
                {suggestions.map(emp => (
                  <li key={emp.id} onClick={() => pickSuggestion(emp)}>
                    {emp.EmpName}{emp.EmployeeID && ` (${emp.EmployeeID})`}
                  </li>
                ))}
              </ul>
            </div>

            <div className="history-list">
              <h3>Search History</h3>
              <ul>
                {history.map(emp => (
                  <li key={emp.id} onClick={() => pickHistory(emp)}>
                    {emp.EmpName}{emp.EmployeeID && ` (${emp.EmployeeID})`}
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>

        
      </div>

 {stats && (
          <div className="stats-grid">
            {[
              ['Total Profiles', stats.TotalProfiles],
              ['Active Profiles', stats.ActiveProfiles],
              ['Active Employees', stats.ActiveEmployees],
              ['Active Contractors', stats.ActiveContractors],
              ['Terminated Profiles', stats.TerminatedProfiles],
              ['Terminated Employees', stats.TerminatedEmployees],
              ['Terminated Contractors', stats.TerminatedContractors],
            ].map(([label, val]) => (
              <div key={label} className="stat-box">
                <h3>{label}</h3>
                <p>{val}</p>
              </div>
            ))}
          </div>
        )}


      <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          marginTop: '0rem',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6'
        }}
      >
        <div>
          <strong>Global Security Operations Center</strong>
          <br />
          Associate Verification Tool — Western Union
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a
            href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
            style={{ color: '#FFC72C', textDecoration: 'underline' }}
          >
            GSOC Mail
          </a>
          &nbsp;|&nbsp;
          Landline:&nbsp;
          <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>

    </div>

  );
}
export default App;


