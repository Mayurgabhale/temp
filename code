Compiled with problems:
Ã—
ERROR in ./src/pages/History.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\Users\W0024618\Desktop\apac-occupancy-frontend\src\pages\History.jsx: Missing semicolon. (998:445)

   996 |   }, [summaryEntry, decodedPartition]);
   997 |
>  998 |   const detailRows = useMemo(() => { if (!data || !pickedDate) return []; const dateStr = format(pickedDate, 'yyyy-MM-dd'); return data.details.filter(r => format(new Date(r.LocaleMessageTime), 'yyyy-MM-dd') === dateStr).filter(r => { if (!decodedPartition) return true; const feCode = apacReverseKey[r.PartitionName2]; return feCode === decodedPartition; }).filter(r => r.Direction === 'InDirection').reduce((unique, row) => { const keyGUID = ${ row.PersonGUID }-${ row.PersonnelType }; if (!unique._seen.has(keyGUID)) { unique._seen.add(keyGUID); unique.rows.push(row); } return unique; }, { _seen: new Set(), rows: [] }).rows; }, [data, pickedDate, decodedPartition]);
       |                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^
   999 |
  1000 |   const handleExport = () => { const ws = XLSX.utils.json_to_sheet(detailRows.map((r, i) => ({ Sr: i + 1, Date: format(new Date(r.LocaleMessageTime), 'yyyy-MM-dd'), Time: format(new Date(r.LocaleMessageTime), 'HH:mm:ss'), EmployeeID: r.EmployeeID, Name: r.ObjectName1, PersonnelType: r.PersonnelType, Door: r.Door, Partition: formatPartition(r.PartitionNameFriendly) }))); const wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, ws, 'Details'); const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' }); saveAs(new Blob([buf]), apac_history_${ format(pickedDate, 'yyyyMMdd') }.xlsx); };
  1001 |
    at constructor (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:367:19)
    at FlowParserMixin.raise (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:6627:19)
    at FlowParserMixin.semicolon (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:6923:10)
    at FlowParserMixin.parseVarStatement (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:13231:10)
    at FlowParserMixin.parseStatementContent (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12851:23)
    at FlowParserMixin.parseStatementLike (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12767:17)
    at FlowParserMixin.parseStatementLike (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:2946:24)
    at FlowParserMixin.parseStatementListItem (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12747:17)
    at FlowParserMixin.parseBlockOrModuleBlockBody (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:13316:61)
    at FlowParserMixin.parseBlockBody (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:13309:10)
    at FlowParserMixin.parseBlock (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:13297:10)
    at FlowParserMixin.parseFunctionBody (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12101:24)
    at C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:2920:63
    at FlowParserMixin.forwardNoArrowParamsConversionAt (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3096:16)
    at FlowParserMixin.parseFunctionBody (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:2920:12)
    at FlowParserMixin.parseArrowExpression (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12076:10)
    at FlowParserMixin.parseParenAndDistinguishExpression (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11686:12)
    at FlowParserMixin.parseParenAndDistinguishExpression (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3621:18)
    at FlowParserMixin.parseExprAtom (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11326:23)
    at FlowParserMixin.parseExprAtom (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:4794:20)
    at FlowParserMixin.parseExprSubscripts (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11076:23)
    at FlowParserMixin.parseUpdate (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11061:21)
    at FlowParserMixin.parseMaybeUnary (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11041:23)
    at FlowParserMixin.parseMaybeUnaryOrPrivate (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10894:61)
    at FlowParserMixin.parseExprOps (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10899:23)
    at FlowParserMixin.parseMaybeConditional (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10876:23)
    at FlowParserMixin.parseMaybeAssign (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10826:21)
    at FlowParserMixin.parseMaybeAssign (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3579:18)
    at C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10795:39
    at FlowParserMixin.allowInAnd (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12427:12)
    at FlowParserMixin.parseMaybeAssignAllowIn (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10795:17)
    at FlowParserMixin.parseMaybeAssignAllowInOrVoidPattern (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12494:17)
    at FlowParserMixin.parseExprListItem (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12176:18)
    at FlowParserMixin.parseCallExpressionArguments (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11247:22)
    at FlowParserMixin.parseCoverCallAndAsyncArrowHead (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11181:29)
    at FlowParserMixin.parseSubscript (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11115:19)
    at FlowParserMixin.parseSubscript (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3680:18)
    at FlowParserMixin.parseSubscripts (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11089:19)
    at FlowParserMixin.parseSubscripts (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3646:18)
    at FlowParserMixin.parseExprSubscripts (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11080:17)
    at FlowParserMixin.parseUpdate (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11061:21)
    at FlowParserMixin.parseMaybeUnary (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:11041:23)
    at FlowParserMixin.parseMaybeUnaryOrPrivate (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10894:61)
    at FlowParserMixin.parseExprOps (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10899:23)
    at FlowParserMixin.parseMaybeConditional (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10876:23)
    at FlowParserMixin.parseMaybeAssign (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10826:21)
    at FlowParserMixin.parseMaybeAssign (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:3579:18)
    at FlowParserMixin.parseExpressionBase (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10779:23)
    at C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:10775:39
    at FlowParserMixin.allowInAnd (C:\Users\W0024618\Desktop\apac-occupancy-frontend\node_modules\@babel\parser\lib\index.js:12422:16)
ERROR
[eslint] 
src\pages\History.jsx
  Line 998:445:  Parsing error: Missing semicolon. (998:445)




  const detailRows = useMemo(() => { if (!data || !pickedDate) return []; const dateStr = format(pickedDate, 'yyyy-MM-dd'); return data.details.filter(r => format(new Date(r.LocaleMessageTime), 'yyyy-MM-dd') === dateStr).filter(r => { if (!decodedPartition) return true; const feCode = apacReverseKey[r.PartitionName2]; return feCode === decodedPartition; }).filter(r => r.Direction === 'InDirection').reduce((unique, row) => { const keyGUID = ${ row.PersonGUID }-${ row.PersonnelType }; if (!unique._seen.has(keyGUID)) { unique._seen.add(keyGUID); unique.rows.push(row); } return unique; }, { _seen: new Set(), rows: [] }).rows; }, [data, pickedDate, decodedPartition]);

  const handleExport = () => { const ws = XLSX.utils.json_to_sheet(detailRows.map((r, i) => ({ Sr: i + 1, Date: format(new Date(r.LocaleMessageTime), 'yyyy-MM-dd'), Time: format(new Date(r.LocaleMessageTime), 'HH:mm:ss'), EmployeeID: r.EmployeeID, Name: r.ObjectName1, PersonnelType: r.PersonnelType, Door: r.Door, Partition: formatPartition(r.PartitionNameFriendly) }))); const wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, ws, 'Details'); const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' }); saveAs(new Blob([buf]), apac_history_${ format(pickedDate, 'yyyyMMdd') }.xlsx); };
