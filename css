// // src/pages/FloorDetailsPage.jsx
// import React from 'react';
// import { Container, Row, Col, Card, Table } from 'react-bootstrap';
// import FloorDetailsTable from '../components/FloorDetailsTable';

// export default function FloorDetailsPage({ floorData = [] }) {
//   if (!floorData.length) {
//     return <p className="text-center mt-4">No floor details available.</p>;
//   }

//   return (
//     <Container fluid className="py-4">
//       <h2 className="mb-4">Floor Details</h2>
//       <Row xs={1} md={2} lg={3} className="g-4">
//         {floorData.map(({ floor, total, occupants }) => (
//           <Col key={floor}>
//             <Card border="primary" className="h-100">
//               <Card.Header>
//                 <strong>{floor}</strong> — Total: {total}
//               </Card.Header>
//               <Card.Body style={{ overflowY: 'auto', maxHeight: 300 }}>
//                 <Table striped bordered hover size="sm" className="mb-0">
//                   <thead>
//                     <tr>
//                       <th>Name</th>
//                       <th>Swipe Time</th>
//                       <th>Type</th>
//                       <th>Door Name</th>
//                     </tr>
//                   </thead>
//                   <tbody>
//                     {occupants.map((emp, idx) => (
//                       <tr key={`${emp.EmployeeID}-${idx}`}>
//                         <td>{emp.ObjectName1}</td>
//                         <td>{emp.Swipe_Time}</td>
//                         <td>{emp.PersonnelType}</td>
//                         <td>{emp.Door}</td>
//                       </tr>
//                     ))}
//                   </tbody>
//                 </Table>
//               </Card.Body>
//             </Card>
//           </Col>
//         ))}
//       </Row>
//     </Container>
//   );
// }




// src/pages/FloorDetailsPage.jsx

import React from 'react';
import { Container, Row, Col, Card, Table } from 'react-bootstrap';

export default function FloorDetailsPage({ floorData = [] }) {
  if (!floorData.length) {
    return <p className="text-center mt-4">No floor details available.</p>;
  }

  return (
    <Container fluid className="py-4">
      {/* <h2 className="mb-4 text-dark">Floor Details</h2> */}
      <Row xs={1} md={2} lg={3} className="g-4">
        {floorData.map(({ floor, total, occupants }) => (
          <Col key={floor}>
            <Card className="h-100 border-warning">
              <Card.Header className="bg-warning text-dark">
                <strong>{floor}</strong> — Total: {total}
              </Card.Header>
              <Card.Body style={{ overflowY: 'auto', maxHeight: 300, backgroundColor: '#1c1c1c', }}>

                {/* <Table striped bordered hover size="sm" className="mb-0">
                  <thead className="table-light">
                    <tr>
                      <th>Name</th>
                      <th>Swipe Time</th>
                      <th>Type</th>
                      <th>Door Name</th>
                    </tr>
                  </thead>
                  <tbody>
                    {occupants.map((emp, idx) => (
                      <tr key={`${emp.EmployeeID}-${idx}`}>
                        <td>{emp.ObjectName1}</td>
                        <td>{emp.Swipe_Time}</td>
                        <td>{emp.PersonnelType}</td>
                        <td>{emp.Door}</td>
                      </tr>
                    ))}
                  </tbody>
                </Table> */}



                <Table
                  striped
                  bordered
                  hover
                  size="sm"
                  className="mb-0"
                  style={{ backgroundColor: '#1c1c1c', color: '#f0f0f0' }}
                >
                  <thead style={{ backgroundColor: '#333', color: '#fff' }}>
                    <tr>
                      <th>Name</th>
                      <th>Swipe Time</th>
                      <th>Type</th>
                      <th>Door Name</th>
                    </tr>
                  </thead>
                  <tbody>
                    {occupants.map((emp, idx) => (
                      <tr
                        key={`${emp.EmployeeID}-${idx}`}
                        style={{
                          backgroundColor: idx % 2 === 0 ? '#2a2a2a' : '#3a3a3a',
                          color: '#e0e0e0'
                        }}
                      >
                        <td>{emp.ObjectName1}</td>
                        <td>{emp.Swipe_Time}</td>
                        <td>{emp.PersonnelType}</td>
                        <td>{emp.Door}</td>
                      </tr>
                    ))}
                  </tbody>
                </Table>



              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
}



