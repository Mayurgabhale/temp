import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  LabelList,
  Cell
} from 'recharts';

const GREEN_SCALE = [
  '#66BB6A', '#81C784', '#A5D6A7', '#C8E6C9', '#E8F5E9',
  '#43A047', '#388E3C', '#2E7D32', '#1B5E20', '#4CAF50'
];

export default function CompositeChartCard({
  title = 'Sample Floors',
  data = [],
  lineColor = '#4CAF50',
  height = 400,
  animationDuration = 1500,
  animationEasing = 'ease-in-out'
}) {
  const enriched = data.map((d, i) => ({
    ...d,
    percentage: d.capacity ? Math.round((d.headcount / d.capacity) * 100) : 0,
    _color: GREEN_SCALE[i % GREEN_SCALE.length]
  }));

  const totalHeadcount = enriched.reduce((sum, d) => sum + (d.headcount || 0), 0);
  const totalCapacity = enriched.reduce((sum, d) => sum + (d.capacity || 0), 0);
  const avgUsage = totalCapacity ? Math.round((totalHeadcount / totalCapacity) * 100) : 0;

  return (
    <Card sx={{
      borderRadius: 2,
      bgcolor: 'rgba(0,0,0,0.4)',
      border: `2px solid ${lineColor}`
    }}>
      <CardContent>
        <Typography variant="h6" sx={{ mb: 2, color: lineColor }}>
          {title}
        </Typography>
        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart data={enriched} margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.2)" />
              <XAxis
                dataKey="name"
                stroke="#fff"
                tickFormatter={(label) => `${label} Floor`}
              />
              <YAxis yAxisId="left" stroke="#fff" />
              <YAxis yAxisId="right" orientation="right" stroke="#fff" domain={[0, 100]} tickFormatter={val => `${val}%`} />

              <Tooltip
                contentStyle={{ backgroundColor: '#fff', color: '#000' }}
                formatter={(value, name) => [value, name === 'percentage' ? 'Usage %' : name]}
              />
              <Legend />

              <Bar yAxisId="left" dataKey="headcount" name="Headcount" barSize={30}>
                {enriched.map((entry, index) => (
                  <Cell key={`cell-${index}`} fill={entry._color} />
                ))}
                <LabelList dataKey="headcount" position="top" style={{ fill: '#fff' }} />
              </Bar>

              <Line yAxisId="right" type="monotone" dataKey="percentage" name="Usage %" stroke={lineColor} strokeWidth={2} dot={false} />
            </ComposedChart>
          </ResponsiveContainer>
        </Box>

        <Box sx={{ mt: 2, color: '#fff', display: 'flex', justifyContent: 'space-around' }}>
          <div>Total Headcount: {totalHeadcount}</div>
          <div>Total Capacity: {totalCapacity}</div>
          <div>Usage: {avgUsage}%</div>
        </Box>
      </CardContent>
    </Card>
  );
}