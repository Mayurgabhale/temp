<Card sx={{ borderRadius: 3, boxShadow: '0 2px 12px rgba(0,0,0,0.1)', bgcolor: '#fff' }}>
  <CardContent>
    {title && (
      <Typography variant="h6" gutterBottom sx={{ fontWeight: 600 }}>
        {title}
      </Typography>
    )}

    <Box sx={{ width: '100%', height: chartHeight }}>
      <ResponsiveContainer>
        <AreaChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 20 }}>
          <defs>
            <linearGradient id="colorHead" x1="0" y1="0" x2="0" y2="1">
              <stop offset="5%" stopColor={colors.head} stopOpacity={0.8} />
              <stop offset="95%" stopColor={colors.head} stopOpacity={0} />
            </linearGradient>
          </defs>

          <CartesianGrid strokeDasharray="3 3" stroke="#e0e0e0" />
          <XAxis
            dataKey="name"
            tickFormatter={t =>
              typeof t === 'number' ? dayjs(t).format('HH:mm') : t
            }
            tick={{ fill: '#616161', fontSize: 12 }}
          />
          <YAxis tick={{ fill: '#616161', fontSize: 12 }} />
          <Tooltip contentStyle={{ backgroundColor: '#333', border: 'none' }} labelStyle={{ color: '#fff' }} />
          <Legend onClick={handleLegend} />
          <Area
            type="monotone"
            dataKey={dataKey}
            stroke={colors.head}
            fill="url(#colorHead)"
            hide={hidden[dataKey]}
          />
          <Brush
            dataKey="name"
            height={20}
            stroke={colors.head}
            fill="#fafafa"
          />
        </AreaChart>
      </ResponsiveContainer>
    </Box>
  </CardContent>
</Card>













<Container maxWidth={false} disableGutters sx={{ px: 3, py: 3, bgcolor: '#f4f6f8' }}>
  <Box mb={2}>
    <Button 
      size="small" 
      onClick={() => navigate(-1)} 
      variant="outlined" 
      startIcon={<ArrowBackIosNew fontSize="small" />}
    >
      Back
    </Button>
  </Box>

  <Box display="flex" flexWrap="wrap" gap={2} mb={4}>
    {cards.map(c => (
      <Box 
        key={c.title} 
        sx={{ 
          flex: '1 1 calc(16.66% - 16px)', 
          minWidth: 220 
        }}
      >
        <SummaryCard
          title={c.title}
          total={c.value}
          stats={[]}
          icon={c.icon}
          sx={{
            height: 150,
            border: `1.5px solid ${c.border}`,
            borderRadius: 2,
            boxShadow: '0 2px 8px rgba(0,0,0,0.05)',
            background: '#fff'
          }}
        />
      </Box>
    ))}
  </Box>

  <Box
    sx={{
      p: 3,
      borderRadius: 3,
      backgroundColor: '#212121',
      border: '1.5px solid #FFC107',
      color: '#fff',
      boxShadow: '0 4px 16px rgba(0,0,0,0.3)'
    }}
  >
    <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
      <Typography variant="h6">Live Floor Headcount vs Capacity</Typography>
      <Typography variant="body2" sx={{ opacity: 0.7 }}>
        Last updated: {lastUpdate}
      </Typography>
    </Box>

    <ChartCard
      data={floorEntries}
      dataKey="headcount"
      chartHeight={320}
      colors={{ head: '#28B463', cap: '#FDDA0D' }}
      axisProps={{
        xAxis: { tick: { fill: '#fff' }, angle: 0 },
        yAxis: { tick: { fill: '#fff' } }
      }}
    />
  </Box>

  <Footer />
</Container>