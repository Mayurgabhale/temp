<TableBody>
  {(() => {
    const term = searchTerm.trim().toLowerCase();

    // Filter by EmployeeID, Name, or CardNumber if there's a search term
    const isSearching = term.length > 0;
    const filteredEmps = isSearching
      ? emps.filter(r =>
          r.EmployeeID.toLowerCase().includes(term) ||
          r.ObjectName1.toLowerCase().includes(term) ||
          (r.CardNumber && r.CardNumber.toLowerCase().includes(term))
        )
      : emps.slice(0, 10); // default: show first 10 only

    return filteredEmps.map((r, i) => {
      const isMatch = isSearching;
      return (
        <TableRow
          key={`${r.PersonGUID}-${i}`}
          sx={isMatch ? { backgroundColor: "rgba(255, 235, 59, 0.3)" } : {}}
        >
          <TableCell>{r.EmployeeID}</TableCell>
          <TableCell>{r.ObjectName1}</TableCell>
          <TableCell>{new Date(r.LocaleMessageTime).toLocaleTimeString()}</TableCell>
          <TableCell>{r.PersonnelType}</TableCell>
          <TableCell>{r.CardNumber}</TableCell>
          <TableCell>{r.Door}</TableCell>
        </TableRow>
      );
    });
  })()}
</TableBody>