
import React from 'react';
import { Box, CircularProgress } from '@mui/material';
import '../App.css';


export default function LoadingSpinner() {
  return (
    <Box
      sx={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '100vh', // Full screen height
        gap: 3,              // Space between the two spinners
       
      }}
    >
      {/* <CircularProgress /> */}
      <span className="loader"></span>
    </Box>
  );
}
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


  

/*  */
C:\Users\W0024618\Desktop\apac-occupancy-frontend\src\App.css

.loader {
  width: 48px;
  height: 48px;
  border: 3px dotted #FFF;
  border-style: solid solid dotted dotted;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  animation: rotation 2s linear infinite;
}

.loader::after {
  content: '';
  box-sizing: border-box;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  border: 3px dotted #FF3D00;
  border-style: solid solid dotted;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  animation: rotationBack 1s linear infinite;
  transform-origin: center center;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotationBack {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

  

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
if (loading) {
  return (
    <Box
      sx={{
        position: 'fixed',
        top: 0,
        left: 0,
        width: '100vw',
        height: '100vh',
        bgcolor: 'rgba(0, 0, 0, 0.85)',
        zIndex: 9999,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
      }}
    >
      <LoadingSpinner />
    </Box>
  );
}

return (
  <>
    <Header />
    <Container maxWidth={false} disableGutters sx={{ px: 2, py: 0, background: '#151515' }}>
      {/* ... everything else ... */}
    </Container>
    <Footer />
  </>
);
















<Box display="flex" flexWrap="wrap" gap={1} mb={1}>
          {loading ? (
            <LoadingSpinner />
          ) : (
            summaryItems
              .filter(item => !['Dublin', 'Rome', 'Moscow'].includes(item.label))
              .map((item, index) => {
                const [tc, totc, ec, cc] = item.colors;
                const pieCities = ['Dublin', 'Rome', 'Moscow'];

                const pieData = summaryItems
                  ?.filter(item => pieCities.includes(item.label))
                  .map(item => ({
                    name: item.label,
                    value: item.total
                  }));

                return (
                  <Box key={item.label} sx={{ flex: '1 1 calc(10.66% - 1px)' }}>
                    <SummaryCard
                      title={item.label}
                      total={item.total}
                      stats={[
                        { label: 'Employees', value: item.emp },
                        { label: 'Contractors', value: item.cont }
                      ]}
                      icon={
                        item.flag && (
                          <Box
                            component="img"
                            src={item.flag}
                            alt={item.label}
                            sx={{ width: 45, height: 25, border: '1px solid #fff' }}
                          />
                        )
                      }
                      titleColor={tc}
                      statColors={[ec, cc]}
                      sx={{
                        height: 200,
                        border: `2px solid ${palette15[index % palette15.length]}`, // âœ… Now index is defined
                        '& .MuiTypography-subtitle1': { fontSize: '1.3rem' },
                        '& .MuiTypography-h4': { fontSize: '2rem' },
                        '& .MuiTypography-caption': { fontSize: '1.3rem' }
                      }}
                    />
                  </Box>
                );
              })
          )}
        </Box>
