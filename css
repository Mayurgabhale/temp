<Container maxWidth={false} disableGutters sx={{ px: 3, py: 3, bgcolor: '#f4f6f8' }}>
  <Box mb={2}>
    <Button 
      size="small" 
      onClick={() => navigate(-1)} 
      variant="outlined" 
      startIcon={<ArrowBackIosNew fontSize="small" />}
    >
      Back
    </Button>
  </Box>

  <Box display="flex" flexWrap="wrap" gap={2} mb={4}>
    {cards.map(c => (
      <Box 
        key={c.title} 
        sx={{ 
          flex: '1 1 calc(16.66% - 16px)', 
          minWidth: 220 
        }}
      >
        <SummaryCard
          title={c.title}
          total={c.value}
          stats={[]}
          icon={c.icon}
          sx={{
            height: 150,
            border: `1.5px solid ${c.border}`,
            borderRadius: 2,
            boxShadow: '0 2px 8px rgba(0,0,0,0.05)',
            background: '#fff'
          }}
        />
      </Box>
    ))}
  </Box>

  <Box
    sx={{
      p: 3,
      borderRadius: 3,
      backgroundColor: '#212121',
      border: '1.5px solid #FFC107',
      color: '#fff',
      boxShadow: '0 4px 16px rgba(0,0,0,0.3)'
    }}
  >
    <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
      <Typography variant="h6">Live Floor Headcount vs Capacity</Typography>
      <Typography variant="body2" sx={{ opacity: 0.7 }}>
        Last updated: {lastUpdate}
      </Typography>
    </Box>

    <ChartCard
      data={floorEntries}
      dataKey="headcount"
      chartHeight={320}
      colors={{ head: '#28B463', cap: '#FDDA0D' }}
      axisProps={{
        xAxis: { tick: { fill: '#fff' }, angle: 0 },
        yAxis: { tick: { fill: '#fff' } }
      }}
    />
  </Box>

  <Footer />
</Container>