{regions.map((region) => {
  const count = counts[region];
  const isSelected = region === selected;

  return (
    <Button
      key={region}
      fullWidth
      onClick={() => onSelect(region)}
      variant={isSelected ? 'contained' : 'text'}
      color={isSelected ? 'primary' : 'secondary'}
      startIcon={
        <LocationOnIcon
          sx={{
            fontSize: 20,
            color: isSelected
              ? 'primary.contrastText'
              : 'secondary.contrastText'
          }}
        />
      }
      sx={{
        justifyContent: 'space-between',
        mb: 1,
        textTransform: 'uppercase', // Already helps
        fontSize: '0.875rem',
        color: isSelected ? 'primary.contrastText' : 'secondary.contrastText',
      }}
    >
      <Box
        component="span"
        sx={{ flexGrow: 1, textAlign: 'left' }}
      >
        {region.toUpperCase()}
      </Box>
      <Box
        component="span"
        sx={{ color: '#FFCC00' }}
      >
        {typeof count === 'number' ? count : 'â€“'}
      </Box>
    </Button>
  );
})}