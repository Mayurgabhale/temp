// Guard until data is loaded
const isLoading = !liveSummary || !history || !history.summaryByDate || !Array.isArray(history.summaryByDate);

// Moved up before early return — ✅ useMemo now called always
const floorEntries = useMemo(() => {
  if (!liveSummary?.realtime?.[partition]) return [];

  const liveFloors = liveSummary.realtime[partition].floors || {};

  return Object.entries(liveFloors).map(([floor, cnt]) => {
    const name = floor.trim();
    const capacity = buildingCapacities[name] ?? seatCapacities[partition] ?? 0;
    const pct = capacity ? Math.round((cnt / capacity) * 100) : 0;

    return {
      name,
      Headcount: cnt,
      Capacity: capacity,
      breakdown: {
        Headcount: cnt,
        "Total Seat": capacity,
        Usage: `${pct}%`,
      },
    };
  });
}, [liveSummary, partition]);

// ✅ Now safe: return comes after all hooks
if (isLoading) return <LoadingSpinner />;