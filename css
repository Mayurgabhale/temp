Read below file carefully and create compositechart for Quezon City composite charts floor wise, same as pune composite chart



// src/utils/doorMap.js

// 1) Raw mapping from “DOOR___Direction” → zone name
const doorZoneMap = {
  // Podium / Red

  "APAC_IN_PUN_PODIUM_RED_IDF ROOM-02-RESTRICTED DOOR___InDirection":                 "Red Zone",
  "APAC_IN_PUN_PODIUM_ST2 DOOR 1 (RED)___InDirection":                               "Red Zone",
  "APAC_IN_PUN_PODIUM_ST2 DOOR 1 (RED)___OutDirection":                              "Red Zone",
  "APAC_IN_PUN_PODIUM_RED_MAIN LIFT LOBBY ENTRY 1-DOOR___InDirection":               "Red Zone",
  "APAC_IN_PUN_PODIUM_RED_MAIN LIFT LOBBY ENTRY 1-DOOR___OutDirection":              "Out of office",
  "APAC_IN_PUN_PODIUM_ST 1-DOOR 1 (RED)___InDirection":                              "Red Zone",
  "APAC_IN_PUN_PODIUM_ST 1-DOOR 1 (RED)___OutDirection":                             "Red Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_RED_RECEPTION TO WS ENTRY 1-DOOR NEW___InDirection":           "Red Zone",
  "APAC_IN_PUN_PODIUM_RED_RECEPTION TO WS ENTRY 1-DOOR NEW___OutDirection":          "Reception Area",
  "APAC_IN_PUN_PODIUM_RED_RECREATION AREA FIRE EXIT 1-DOOR NEW___InDirection":       "Red Zone",
  "APAC_IN_PUN_PODIUM_RED_RECREATION AREA FIRE EXIT 1-DOOR NEW___OutDirection":      "Yellow Zone - Outer Area",

  // Podium / Yellow
  "APAC_IN_PUN_PODIUM_ST2 DOOR 2 (YELLOW)___InDirection":                            "Yellow Zone",
  "APAC_IN_PUN_PODIUM_ST2 DOOR 2 (YELLOW)___OutDirection":                           "Yellow Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_YELLOW_MDF RESTRICTED DOOR___InDirection":                     "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_IT STORE ROOM-DOOR RESTRICTED DOOR___InDirection":      "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_REPRO STORE-DOOR RESTRICTED DOOR___InDirection":         "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_CONTROL PANEL ROOM-DOOR RESTRICTED DOOR___InDirection": "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_PREACTION ROOM-DOOR RESTRICTED DOOR___InDirection":      "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_TESTING LAB-DOOR RESTRICTED DOOR___InDirection":         "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_RECEPTION ENTRY-DOOR___InDirection":                     "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_RECEPTION ENTRY-DOOR___OutDirection":                    "Reception Area",
  "APAC_IN_PUN_PODIUM_YELLOW_MAIN LIFT LOBBY-DOOR NEW___InDirection":                 "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_MAIN LIFT LOBBY-DOOR NEW___OutDirection":                "Out of office",
  "APAC_IN_PUN_PODIUM_ST 1 DOOR 2 (YELLOW)___InDirection":                            "Yellow Zone",
  "APAC_IN_PUN_PODIUM_ST 1 DOOR 2 (YELLOW)___OutDirection":                           "Yellow Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_YELLOW_FIRE EXIT 1-DOOR NEW___InDirection":                     "Yellow Zone",
  "APAC_IN_PUN_PODIUM_YELLOW_FIRE EXIT 1-DOOR NEW___OutDirection":                    "Yellow Zone - Outer Area",

  // Podium / Green
  "APAC_IN_PUN_PODIUM_GREEN-_IDF ROOM 1-RESTRICTED DOOR___InDirection":              "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN_UPS ENTRY 1-DOOR RESTRICTED DOOR___InDirection":          "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN_UPS ENTRY 2-DOOR RESTRICTED DOOR___InDirection":          "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN_LOCKER HR STORE 3-DOOR RESTRICTED DOOR___InDirection":    "Green Zone",
  "APAC_IN_PUN_PODIUM_ST4 DOOR 2 (GREEN)___InDirection":                              "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN-MAIN LIFT LOBBY-DOOR___InDirection":                      "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN-MAIN LIFT LOBBY-DOOR___OutDirection":                     "Green Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_ST3 DOOR 2 (GREEN)___InDirection":                              "Green Zone",
  "APAC_IN_PUN_PODIUM_ST3 DOOR 2 (GREEN)___OutDirection":                             "Green Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_GREEN_RECEPTION ENTRY-DOOR___InDirection":                     "Green Zone",
  "APAC_IN_PUN_PODIUM_GREEN_RECEPTION ENTRY-DOOR___OutDirection":                    "Reception Area",

  // Podium / Orange
  "APAC_IN_PUN_PODIUM_ST4 DOOR 1 (ORANGE)___InDirection":                             "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_RECEPTION ENTRY-DOOR___InDirection":                    "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_RECEPTION ENTRY-DOOR___OutDirection":                   "Reception Area",
  "APAC_IN_PUN_PODIUM_ST3_DOOR 1 (ORANGE)___InDirection":                            "Orange Zone",
  "APAC_IN_PUN_PODIUM_ST3_DOOR 1 (ORANGE)___OutDirection":                           "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_MAIN LIFT LOBBY-DOOR___InDirection":                     "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_MAIN LIFT LOBBY-DOOR___OutDirection":                    "Orange Zone - Outer Area",
  "APAC_IN_PUN_PODIUM_ORANGE-IDF ROOM 3-RESTRICTED DOOR___InDirection":               "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_KITCHENETTE FIRE EXIT-DOOR NEW___InDirection":          "Orange Zone",
  "APAC_IN_PUN_PODIUM_ORANGE_KITCHENETTE FIRE EXIT-DOOR NEW___OutDirection":         "Orange Zone - Outer Area",

  // Podium / GSOC door
  "APAC_IN_PUN_PODIUM_GSOC DOOR RESTRICTED DOOR___InDirection":                       "Yellow Zone",

  // Podium / Main Right & Left Entry
  "APAC_IN_PUN_PODIUM_MAIN PODIUM RIGHT ENTRY-DOOR NEW___InDirection":                "Reception Area",
  "APAC_IN_PUN_PODIUM_MAIN PODIUM RIGHT ENTRY-DOOR NEW___OutDirection":               "Assembly Area",
  "APAC_IN_PUN_PODIUM_MAIN PODIUM LEFT ENTRY-DOOR NEW___InDirection":                 "Reception Area",
  "APAC_IN_PUN_PODIUM_MAIN PODIUM LEFT ENTRY-DOOR NEW___OutDirection":                "Assembly Area",

  // Podium / Turnstiles
  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 1-DOOR___InDirection":                           "Reception Area",
  // "APAC_IN_PUN_POD podium_P-1 TURNSTILE 2-DOOR___InDirection":                       "Reception Area",
  // "APAC_IN_PUN_POD podium_P-1 TURNSTILE 3-DOOR___InDirection":                       "Reception Area",

  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 2-DOOR___InDirection":                           "Reception Area",
  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 3-DOOR___InDirection":                           "Reception Area",

  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 4-DOOR___InDirection":                           "Reception Area",
  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 2 -OUT DOOR___OutDirection":                     "Out of office",
  // "APAC_IN_PUN-PODIUM_P-1 TURNSTILE 3 -OUT DOOR___OutDirection":                     "Out of office",
   "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 3 -OUT DOOR___OutDirection":                     "Out of office",
  "APAC_IN_PUN_PODIUM_P-1 TURNSTILE 4 -OUT DOOR___OutDirection":                     "Out of office",
  "APAC_IN_PUN_POD podium_P-1 TURNSTILE 1-OUT DOOR___OutDirection":                  "Out of office",

  // 2nd Floor / various
  "APAC_IN_PUN_2NDFLR_IDF ROOM_10:05:86 RESTRICTED DOOR___InDirection":                "2nd Floor, Pune",
  "APAC_IN_PUN_2NDFLR_UPS/ELEC ROOM RESTRICTED DOOR___InDirection":                    "2nd Floor, Pune",
  "APAC_IN_PUN_2NDFLR_RECPTION TO WORKSTATION DOOR___InDirection":                     "2nd Floor, Pune",
  "APAC_IN_PUN_2NDFLR_RECPTION TO WORKSTATION DOOR___OutDirection":                    "Out of office",
  "APAC_IN_PUN_2NDFLR_LIFTLOBBY TO RECEPTION EMTRY DOOR___InDirection":                 "2nd Floor, Pune",
  "APAC_IN_PUN_2NDFLR_LIFTLOBBY TO RECEPTION EMTRY DOOR___OutDirection":                "2nd Floor, Pune",

  // Tower B
  "APAC_IN_PUN_TOWER B_MAIN RECEPTION DOOR___InDirection":                             "Tower B",
  "APAC_IN_PUN_TOWER B_MAIN RECEPTION DOOR___OutDirection":                            "Out of office",
  "APAC_IN_PUN_TOWER B_LIFT LOBBY DOOR___InDirection":                                 "Tower B",
  "APAC_IN_PUN_PODIUM_TOWER B_LIFT LOBBY DOOR___OutDirection":                          "Out of office",
  "APAC_IN_PUN_TOWER B_ST6_GYM SIDE DOOR___InDirection":                               "Tower B",
  "APAC_IN_PUN_TOWER B_ST6_GYM SIDE DOOR___OutDirection":                              "Tower B",
  "APAC_IN_PUN_TOWER B_ST6_WKS SIDE DOOR___InDirection":                               "Tower B",
  "APAC_IN_PUN_TOWER B_ST6_WKS SIDE DOOR___OutDirection":                              "Tower B",
  "APAC_IN_PUN_TOWER B_ST5_KAPIL DEV DOOR___InDirection":                              "Tower B",
  "APAC_IN_PUN_TOWER B_ST5_KAPIL DEV DOOR___OutDirection":                             "Tower B",
  "APAC_IN_PUN_TOWER B_ST5_WKS SIDE DOOR___InDirection":                               "Tower B",
  "APAC_IN_PUN_TOWER B_ST5_WKS SIDE DOOR___OutDirection":                              "Tower B",
  "APAC_IN_PUN_TOWER B_RECEPTION LEFT DOOR___InDirection":                             "Tower B",
  "APAC_IN_PUN_TOWER B_RECEPTION LEFT DOOR___OutDirection":                            "Tower B",
  "APAC_IN_PUN_TOWER B_RECEPTION RIGHT DOOR___InDirection":                            "Tower B",
  "APAC_IN_PUN_TOWER B_RECEPTION RIGHT DOOR___OutDirection":                           "Tower B",
  "APAC_IN_PUN_TOWER B_IBMS ROOM___InDirection":                                       "Tower B",
  "APAC_IN_PUN_TOWER B_UPS ROOM___InDirection":                                        "Tower B",
  "APAC_IN_PUN_TOWER B_MDF ROOM___InDirection":                                        "Tower B",
  "APAC_IN_PUN_TOWER B_PAC ROOM___InDirection":                                        "Tower B",
  "APAC_IN_PUN_TOWER B_IT STORE ROOM___InDirection":                                   "Tower B",
  "APAC_IN_PUN_TOWER B_GYM ROOM___InDirection":                                        "Tower B GYM",
  "APAC_IN_PUN_TOWER B_GYM ROOM___OutDirection":                                       "Tower B GYM",
  "APAC_IN_PUN_TOWER B_SITE OPS STORE___InDirection":                                 "Tower B",


 // ----- APAC-wide (from your Excel file) -----
  // Kuala Lumpur
  "APAC_MY_KL_MAIN ENTRANCE DOOR___InDirection":    "Kuala Lumpur",
  "APAC_MY_KL_MAIN ENTRANCE DOOR___OutDirection":  "Out of office",
  "APAC_MY_KL_INTERIOR RECEPTION DOOR___InDirection":"Kuala Lumpur",
  "APAC_MY_KL_INTERIOR RECEPTION DOOR___OutDirection":"Kuala Lumpur",
  "APAC_MY_KL_SIDE ENTRANCE DOOR NEW___InDirection":"Kuala Lumpur",
  "APAC_MY_KL_SIDE ENTRANCE DOOR NEW___OutDirection":"Kuala Lumpur",
  "APAC_MY_KL_PANTRY ENTRANCE DOOR NEW___InDirection":"Kuala Lumpur",
  "APAC_MY_KL_PANTRY ENTRANCE DOOR NEW___OutDirection":"Kuala Lumpur",
  "APAC_MY_KL_SERVER ROOM DOOR___InDirection":     "Kuala Lumpur",
  "APAC_MY_KL_SERVER ROOM DOOR___OutDirection":    "Kuala Lumpur",

  // Tokyo
  "APAC_JPN_Tokyo_7th FLRSide Entrance___InDirection":"Tokyo",
  "APAC_JPN_Tokyo_7th FLRSide Entrance___OutDirection":"Out of office",
  "APAC_JPN_Tokyo_7th FLR_IT Room___InDirection":     "Tokyo",
  "APAC_JPN_Tokyo_7th FLR_IT Room___OutDirection":    "Tokyo",
  "APAC_JPN_Tokyo_7th FLR_Main Entrance___InDirection":"Tokyo",
  "APAC_JPN_Tokyo_7th FLR_Main Entrance___OutDirection":"Out of office",
  "APAC_JPN_Tokyo_7th FLR_Office Entrance___InDirection":"Tokyo",
  "APAC_JPN_Tokyo_7th FLR_Office Entrance___OutDirection":"Tokyo",
  "APAC_JPN_Tokyo_7th FLR_Side Entrance to Back Office___InDirection":"Tokyo",
  "APAC_JPN_Tokyo_7th FLR_Side Entrance to Back Office___OutDirection":"Out of office",

  // Manila (6th & 7th Floor)
  "APAC_PH_Manila_6th Floor Enrty Door 1___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor Enrty Door 1___OutDirection":"Out of office",
  "APAC_PH_Manila_6th Floor Open Office 2___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor Open Office 2___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Entry Door 2___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Entry Door 2___OutDirection":"Out of office",
  "APAC_PH_Manila_6th Floor_Entry Door 3___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Entry Door 3___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Exit Corridor___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Exit Corridor___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_IDF Restricted Door___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_IDF Restricted Door___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Mothers Room___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Mothers Room___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Print Area___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_Print Area___OutDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_UPS/Switch Restricted Door___InDirection":"6th Floor",
  "APAC_PH_Manila_6th Floor_UPS/Switch Restricted Door___OutDirection":"6th Floor",

  "APAC_PH_Manila_7th Floor_Directors Office-708___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Directors Office-708___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Exit Corridore-704___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Exit Corridore-704___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_IT Work Room  725___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_IT Work Room  725___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_MDF-726 Restricted Door___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_MDF-726 Restricted Door___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Open Office Door 1-721___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Open Office Door 1-721___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Open Office Door 2-721___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Open Office Door 2-721___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Pantry-720a___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Pantry-720a___OutDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Recption Door 1-701___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Recption Door 1-701___OutDirection":"Out of office",
  "APAC_PH_Manila_7th Floor_Recption Door 2-701___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Recption Door 2-701___OutDirection":"Out of office",
  "APAC_PH_Manila_7th Floor_Security Room-723___InDirection":"7th Floor",
  "APAC_PH_Manila_7th Floor_Security Room-723___OutDirection":"7th Floor",

  // PI Manila DR (Taguig)
  "APAC_PI_Manila_DR_MainEntrance___InDirection":"Taguig",
  "APAC_PI_Manila_DR_MainEntrance___OutDirection":"Out of office",
  "APAC_PI_Manila_DR_OfficeLobby___InDirection":"Taguig",
  "APAC_PI_Manila_DR_OfficeLobby___OutDirection":"Out of office",
  "APAC_PI_Manila_DR_Server Restricted Door___InDirection":"Taguig",
  "APAC_PI_Manila_DR_Server Restricted Door___OutDirection":"Taguig",
  "APAC_PI_Manila_DR_StorageRm___InDirection":"Taguig",
  "APAC_PI_Manila_DR_StorageRm___OutDirection":"Taguig",
  "APAC_PI_Manila_Emerg Exit Dr- Lobby___InDirection":"Taguig",
  "APAC_PI_Manila_Emerg Exit Dr- Lobby___OutDirection":"Taguig",
  "APAC_PI_Manila_Emgerg DR_Storage RM___InDirection":"Taguig",
  "APAC_PI_Manila_Emgerg DR_Storage RM___OutDirection":"Taguig",




// --- Manila 7th Floor Reception Doors ---
"APAC_PH_Manila_7th Floor Recption Door 1-701___InDirection":    "7th Floor",
"APAC_PH_Manila_7th Floor Recption Door 1-701___OutDirection":   "Out of office",

"APAC_PH_Manila_7th Floor Recption Door 2-701___InDirection":    "7th Floor",
"APAC_PH_Manila_7th Floor Recption Door 2-701___OutDirection":   "Out of office",

// --- Manila 7th Floor Open Office Door 2-721 ---
"APAC_PH_Manila_7th Floor Open Office Door 2-721___InDirection":  "7th Floor",
"APAC_PH_Manila_7th Floor Open Office Door 2-721___OutDirection": "7th Floor",

// --- Manila 7th Floor IT Work Room  725 & Security Room 723 ---
"APAC_PH_Manila_7th Floor IT Work Room  725___InDirection":      "7th Floor",
"APAC_PH_Manila_7th Floor IT Work Room  725___OutDirection":     "7th Floor",

"APAC_PH_Manila_7th Floor Security Room-723___InDirection":      "7th Floor",
"APAC_PH_Manila_7th Floor Security Room-723___OutDirection":     "7th Floor",

// --- Manila 6th Floor variants ---
"APAC_PH_Manila_6th Floor Enrty Door 1___InDirection":           "6th Floor",
"APAC_PH_Manila_6th Floor Enrty Door 1___OutDirection":          "Out of office",

"APAC_PH_Manila_6th Floor Print Area___InDirection":             "6th Floor",
"APAC_PH_Manila_6th Floor Print Area___OutDirection":            "6th Floor",

"APAC_PH_Manila_6th Floor Entry Door 2___InDirection":           "6th Floor",
"APAC_PH_Manila_6th Floor Entry Door 2___OutDirection":          "Out of office",

"APAC_PH_Manila_6th Floor Entry Door 3___InDirection":           "6th Floor",
"APAC_PH_Manila_6th Floor Entry Door 3___OutDirection":          "6th Floor",

// --- Pune Tower B Lift Lobby Door (OutDirection) ---
"APAC_IN_PUN_TOWER B_LIFT LOBBY DOOR___OutDirection":            "Out of office",

// --- Pune Turnstile 1 Exit Door (normalize the hyphen) ---
"APAC_IN_PUN_PODIUM_P-1 TURNSTILE 1 OUT DOOR___OutDirection":    "Out of office",

// --- Taguig Main Entrance Door (InDirection) ---
"APAC_PI_Manila_DR_MainEntrance___InDirection":                  "Taguig",
"APAC_PI_Manila_DR_MainEntrance___OutDirection":                 "Out of office",

// --- Tokyo 7th Floor Office Entrance (OutDirection) ---
"APAC_JPN_Tokyo_7th FLR Office Entrance___OutDirection":        "Out of office",

};




// 2) zone → floor
const zoneFloorMap = {
  "Red Zone":                 "Podium Floor",
  "Red Zone - Outer Area":    "Podium Floor",
  "Yellow Zone":              "Podium Floor",
  "Yellow Zone - Outer Area": "Podium Floor",
  "Reception Area":           "Podium Floor",
  "Green Zone":               "Podium Floor",
  "Green Zone - Outer Area":  "Podium Floor",
  "Orange Zone":              "Podium Floor",
  "Orange Zone - Outer Area": "Podium Floor",
  "2nd Floor, Pune":          "2nd Floor",
  "2nd Floor, Pune - Outer Area": "2nd Floor",
  "Tower B":                  "Tower B",
  "Tower B - Outer Area":     "Tower B",
  "Tower B GYM":              "Tower B",
  "Tower B GYM - Outer Area": "Tower B",
  "Kuala Lumpur":             "Kuala Lumpur",
  "6th Floor":                "6th Floor",
  "7th Floor":                "7th Floor",
  "Tokyo":                    "Tokyo",
  "Taguig":                   "Taguig",
  // All true “Out of office” go to Unknown:
  "Out of office":            null
};






// 3) How to derive partition for PartitionName2
// 3) Partition → friendly name
const partitionMap = {
  'APAC_IN_PUN':    'Pune',
  'APAC_PH_Manila': 'Quezon City',
  'APAC_JPN_Tokyo': 'JP.Tokyo',
  'APAC_MY_KL':     'MY.Kuala Lumpur',
  'APAC_PI_Manila': 'Taguig City'
};



function normalizeDoorName(name) {
  return name
    .replace(/[_/]/g, ' ')                      // underscores/slashes → spaces
    .replace(/[^\w\s-]/g, '')                   // drop punctuation except hyphens
    .replace(/\bRECPTION\b/gi, 'RECEPTION')     // typo fix
    .replace(/\bENRTY\b|\bENTRTY\b/gi, 'ENTRY') // typo fix
   // strip any trailing 6-digit hex string (e.g. "10054B")
   .replace(/\b[0-9A-F]{6}\b$/, '')
    .replace(/[\s-]+/g, ' ')                    // collapse spaces & hyphens
    .toUpperCase()
    .trim();
}



// 5) Build normalized door→zone lookup
const normalizedDoorZoneMap = Object.entries(doorZoneMap).reduce((acc, [rawKey, zone]) => {
  const [rawDoor, direction] = rawKey.split('___');
  const normKey = `${normalizeDoorName(rawDoor)}___${direction}`;
  acc[normKey] = zone;
  return acc;
}, {});

// 6) Build per-partition doorMap entries
const doorMap = Object.entries(doorZoneMap).reduce((acc, [rawKey, zone]) => {
  const [rawDoor, direction] = rawKey.split('___');
  const prefix    = rawDoor.split('_').slice(0,3).join('_');
  const partition = partitionMap[prefix] || prefix;
  const floor     = zoneFloorMap[zone]  || 'Unknown';

  if (!acc[rawDoor]) {
    acc[rawDoor] = {
      partition,
      door: rawDoor,
      inDirectionFloor:  null,
      outDirectionFloor: null,
      normalizedDoor:    normalizeDoorName(rawDoor)
    };
  }
  if (direction === 'InDirection')  acc[rawDoor].inDirectionFloor  = floor;
  else                              acc[rawDoor].outDirectionFloor = floor;

  return acc;
}, {});

// 7) Export
module.exports = {
  doorZoneMap,
  normalizedDoorZoneMap,
  zoneFloorMap,
  doorMap: Object.values(doorMap),
  normalizeDoorName
};



// src/components/CompositeChartCard.jsx
 
import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import {
  ComposedChart,
  Bar,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  LabelList,
  Cell
} from 'recharts';

import buildingCapacities from '../data/buildingCapacities';
import floorCapacities from '../data/floorCapacities';
 
 
 
const DARK_TO_LIGHT = [
  '#FFD666', '#FFE599', '#FFF2CC', '#FFE599', '#E0E1DD',
  '#FFD666', '#FFEE8C', '#F8DE7E', ' #FBEC5D', '#F0E68C',
  ' #FFEE8C', '#21325E', '#415A77', '#6A7F9A', '#B0C4DE',
  '#1A1F36', '#2B3353', '#4C6482', '#7B90B2', '#CAD3E9'
];
 
export default function CompositeChartCard({
  title,
  data,
  lineColor = '#fff',
  height = 350,
  animationDuration = 1500,
  animationEasing = 'ease-in-out'
}) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <Card sx={{ border: `1px solid #fff`, bgcolor: 'rgba(0,0,0,0.4)' }}>
        <CardContent>
          <Typography variant="subtitle1" align="center" color="text.secondary">
            {title}
          </Typography>
          <Typography variant="body2" align="center" sx={{ mt: 4 }}>
            No realtime employee data
          </Typography>
        </CardContent>
      </Card>
    );
  }
  // Enrich each datum with its usage percentage
  const enriched = data.map((d, i) => ({
    ...d,
    percentage: d.capacity ? Math.round(d.headcount / d.capacity * 100) : 0,
    _color: DARK_TO_LIGHT[i % DARK_TO_LIGHT.length]
  }));
  const totalHeadcount = enriched.reduce((sum, d) => sum + (d.headcount || 0), 0);
  const totalCapacity = enriched.reduce((sum, d) => sum + (d.capacity || 0), 0);
  const avgUsage = totalCapacity ? Math.round((totalHeadcount / totalCapacity) * 100) : 0;
  return (
    <Card
      sx={{
        // border: `1px solid ${lineColor}`,
        borderRadius: 2,
        overflow: 'hidden',
        bgcolor: 'rgba(0,0,0,0.4)',
        transition: 'transform 0.3s, box-shadow 0.3s',
        '&:hover': {
          transform: 'scale(1.02)',
          boxShadow: '0 4px 12px rgba(0,0,0,0.7)'
        }
      }}
    >    
      <CardContent sx={{ p: 1 }}>
        <Typography
          variant="subtitle1"
          align="center"
          gutterBottom
          sx={{ color: '#FFC107' }}
        >
          {title}
        </Typography>
 
        <Box sx={{ width: '100%', height }}>
          <ResponsiveContainer>
            <ComposedChart
              data={enriched}
              margin={{ top: 15, right: 20, left: 0, bottom: 20 }}
            >
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
 
 
              <XAxis
                dataKey="name"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
                tickFormatter={(label, index) => {
                  const strLabel = String(label);
                  const match = strLabel.match(/\d+/); // Extract number from label like "Floor 3"
                  const floorNum = parseInt(match?.[0], 10);
 
                  if (isNaN(floorNum)) return strLabel; // fallback to raw label if no number found
 
                  const suffix = (n) => {
                    if (n % 100 >= 11 && n % 100 <= 13) return `${n}th`;
                    switch (n % 10) {
                      case 1: return `${n}st`;
                      case 2: return `${n}nd`;
                      case 3: return `${n}rd`;
                      default: return `${n}th`;
                    }
                  };
 
                  return suffix(floorNum);
                }}
              />
 
 
              <YAxis
                yAxisId="left"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
              />
 
              <YAxis
                yAxisId="right"
                orientation="right"
                tickLine={false}
                axisLine={false}
                stroke="rgba(255,255,255,0.6)"
                domain={[0, 100]}
                tickFormatter={val => `${val}%`}
              />
 
              {/* <Tooltip
                contentStyle={{ backgroundColor: '#FFD666', borderColor: lineColor }}
                formatter={(value, name) =>
                  name === 'percentage' ? `${value}%` : value
                }
              /> */}
 
              <Tooltip
                contentStyle={{ backgroundColor: '#FFD666', borderColor: lineColor, padding: 8 }}
                // custom content so we can show capacity only on hover
                content={({ active, payload, label }) => {
                  if (!active || !payload || !payload.length) return null;
                  const datum = payload[0].payload;
                  return (
                    <div style={{
                      backgroundColor: '#FFD666',
                      border: `1px solid ${lineColor}`,
                      borderRadius: 4,
                      padding: 8,
                    }}>
                      <div style={{ fontWeight: 700, marginBottom: 4 }}>{label}</div>
                      <div>Headcount: {datum.headcount}</div>
                      <div>Usage %: {datum.percentage}%</div>
                      <div>Seat Capacity: {datum.capacity}</div>
                    </div>
                  );
                }}
              />
 
 
              {/* Headcount bars with per-bar colors & percentage labels */}
              <Bar
                yAxisId="left"
                dataKey="headcount"
                name="Headcount"
                barSize={700}
                isAnimationActive={false}
                animationDuration={0}
                // animationEasing={animationEasing}
              >
                {enriched.map((entry, idx) => (
                  <Cell key={`cell-${idx}`} fill={entry._color} />
                ))}
 
 
                {/* Show % on top of each bar */}
                <LabelList
                  dataKey="headcount"
                  position="top"
                  formatter={val => `${val}`}
                  style={{ fill: '#fff', fontSize: 15, fontWeight: 700 }}
                />
 
                {/* Percentage centered inside each bar */}
                <LabelList
                  dataKey="percentage"
                  position="inside"
                  formatter={val => `${val}%`}
                  style={{ fill: '#EE4B2B', fontSize: 14, fontWeight: 700 }}
                />
              </Bar>
 
 
              {/* Seat Capacity line */}
              <Line
                yAxisId="right"
                type="monotone"
                dataKey="percentage"
                name="Usage %"
                stroke='#FF0000'
                strokeWidth={2}
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />
 
              {/* Optional: draw capacity as second line */}
              <Line
                yAxisId="left"
                type="monotone"
 
                //  dataKey="capacity"
                name="Total Seats"
                stroke="#81C784"
                strokeDasharray="5 5"
                dot={false}
                isAnimationActive
                animationDuration={animationDuration}
                animationEasing={animationEasing}
              />
            </ComposedChart>
          </ResponsiveContainer>
        </Box>
        <Box
          sx={{
            display: 'flex',
            justifyContent: 'center',
            gap: 4,
            alignItems: 'center',
            mb: 1,
            fontWeight: 'bold',
            fontSize: 16
          }}
        >
          <Box sx={{ color: '#FFD700' /* Yellow */ }}>
            Total Headcount: {totalHeadcount}
          </Box>
          <Box sx={{ color: '#4CAF50' /* Green */ }}>
            Total Seats: {totalCapacity}
          </Box>
          <Box sx={{ color: '#FF4C4C' /* Red */ }}>
            Usage: {avgUsage}%
          </Box>
        </Box>
      </CardContent>
    </Card>
  );
}
C:\Users\W0024618\Desktop\apac-occupancy-frontend\src\data\buildingCapacities.js
const buildingCapacities = {
  "Podium Floor": 725,
  "Tower B": 303,
  "2nd Floor": 185,
  "Kuala Lumpur": 100,
  // "Quezon City": 100,
  "Taguig": 100,
  "Tokyo": 100,
  "Quezon City (7thFloor)":100,
  "Quezon City (6thFloor)":100
};

export default buildingCapacities;
C:\Users\W0024618\Desktop\apac-occupancy-frontend\src\data\floorCapacities.js
const floorCapacities = {
  "Podium Floor (Pune)": 725,
  "Tower B (Pune)": 303,
  "2nd Floor (Pune)": 185,
  "Quezon City (7thFloor)":100,
  "Quezon City (6thFloor)":100
  
};

export default floorCapacities;


  















//C:\Users\W0024618\Desktop\apac-occupancy-frontend\src\pages\PartitionDetail.jsx
import React, { useEffect, useState } from "react";
import {
  Container,
  Box,
  Typography,
  Button,
  CircularProgress,
} from "@mui/material";
import { useParams, useNavigate } from "react-router-dom";

import SummaryCard from "../components/SummaryCard";
import ChartCard from "../components/ChartCard";
import Header from "../components/Header";
import Footer from "../components/Footer";
import LoadingSpinner from "../components/LoadingSpinner";

import { fetchLiveSummary, fetchHistory } from "../api/occupancy.service";
import { lookupFloor } from "../utils/floorLookup";

import buildingCapacities from "../data/buildingCapacities";

import GroupIcon from "@mui/icons-material/Group";
import TrackChangesIcon from "@mui/icons-material/TrackChanges";
import PeopleIcon from "@mui/icons-material/People";
import BusinessCenterIcon from "@mui/icons-material/BusinessCenter";

export default function PartitionDetail() {
  const { partition } = useParams();
  const navigate = useNavigate();

  const [liveSummary, setLiveSummary] = useState(null);
  const [history, setHistory] = useState(null);
  const [historyLoading, setHistoryLoading] = useState(true);
  const [lastUpdate, setLastUpdate] = useState("");

  // Auto‐refresh live summary
  useEffect(() => {
    let timer;
    async function loadLive() {
      const json = await fetchLiveSummary();
      setLiveSummary(json);
      setLastUpdate(new Date().toLocaleTimeString());
    }
    loadLive();
    timer = setInterval(loadLive, 1000);
    return () => clearInterval(timer);
  }, [partition]);

  // Load historical summary once
  useEffect(() => {
    setHistoryLoading(true);
    fetchHistory(partition).then((json) => {
      setHistory(json);
      setHistoryLoading(false);
    });
  }, [partition]);

  if (!liveSummary || !history) return <LoadingSpinner />;

  // Totals for cards
  const lastDay = history?.summaryByDate?.at(-1);

// Extract live partition data
const partToday = liveSummary?.realtime?.[partition] || {
  total: 0,
  Employee: 0,
  Contractor: 0,
  TempBadge: 0,
  floors: {},
};

  // Build floorEntries with capacity
  const floorEntries = partToday.floors
  ? Object.entries(partToday.floors).map(([floor, cnt]) => {
      const name = floor.trim();
      const capacity = buildingCapacities[name] ?? 0;
      const pct = capacity ? Math.round((cnt / capacity) * 100) : 0;

      return {
        name,
        Headcount: cnt,
        Capacity: capacity,
        breakdown: {
          Headcount: cnt,
          'Total Seat': capacity,
          Usage: pct + '%',
        },
      };
    })
  : [];


  return (
    <>
      <Header />

      <Box component="main" sx={{ pt: 1, pb: 1 }}>
        <Container maxWidth={false} disableGutters>
          {/* Back button */}
          <Box display="flex" alignItems="center" mb={1} sx={{ px: "20px" }}>
            <Button size="small" onClick={() => navigate(-1)}>
              ← Back
            </Button>
          </Box>

          {/* Six‐card partition summary */}
         <Box display="flex" flexWrap="wrap" gap={1} mb={1}>
  {[
    {
      title: "Today's Total Headcount",
      value: historyLoading ? <CircularProgress size={20} /> : partToday.total,
      icon: <i className="fa-solid fa-users" style={{ fontSize: 25, color: '#FFB300' }} />,
      border: '#FFB300',
    },
    {
      title: "Today's Employees Count",
      value: historyLoading ? <CircularProgress size={20} /> : partToday.Employee,
      icon: <i className="bi bi-people" style={{ fontSize: 25, color: '#EF5350' }} />,
      border: '#8BC34A',
    },
    {
      title: "Today's Contractors Count",
      value: historyLoading ? <CircularProgress size={20} /> : partToday.Contractor,
      icon: <i className="fa-solid fa-circle-user" style={{ fontSize: 25, color: '#8BC34A' }} />,
      border: '#E57373',
    },
    {
      title: "Realtime Headcount",
      value: partToday.total,
      icon: <i className="fa-solid fa-users" style={{ fontSize: 25, color: '#FFB300' }} />,
      border: '#FFD180',
    },
    {
      title: "Realtime Employees Count",
      value: partToday.Employee,
      icon: <i className="bi bi-people" style={{ fontSize: 25, color: '#EF5350' }} />,
      border: '#AED581',
    },
    {
      title: "Realtime Contractors Count",
      value: partToday.Contractor,
      icon: <i className="fa-solid fa-circle-user" style={{ fontSize: 25, color: '#8BC34A' }} />,
      border: '#EF5350',
    },
  ].map((card) => (
    <Box key={card.title} sx={{ flex: "1 1 calc(16.66% - 8px)" }}>
      <SummaryCard
        title={card.title}
        total={card.value}
        stats={[]}
        icon={card.icon}
        sx={{
          height: 140,
          border: `2px solid ${card.border}`,
        }}
      />
    </Box>
  ))}
</Box>
          {/* Floor‐capacity chart */}
          <Box mb={4} sx={{ px: "20px", p: 2, border: "2px solid #FFC107" }}>
            <Box display="flex" justifyContent="space-between" alignItems="center" mb={1}>
              <Typography variant="h6">Live Floor Headcount against Occupancy</Typography>
              <Typography variant="body2" color="textSecondary">
                Last updated: {lastUpdate}
              </Typography>
            </Box>

            <ChartCard
              data={floorEntries}
              dataKey="Headcount"
              chartHeight={320}
              colors={{ head: "#28B463", cap: "#FDDA0D" }}
              axisProps={{
                xAxis: { angle: -0, textAnchor: "end", tick: { fill: "#fff" } },
                yAxis: { tick: { fill: "#fff" } },
              }}
            />
          </Box>
        </Container>
      </Box>

      <Footer />
    </>
  );
}
