{/* From Date */}
<Box sx={{ position: 'relative' }}>
  <TextField
    label={tab === 0 ? 'From Date' : 'Start Date'}
    value={from ? from.toLocaleDateString() : ''}
    readOnly
    onClick={() => setShowFromCal(true)}
    sx={{
      '& .MuiOutlinedInput-root': {
        '& fieldset': {
          borderColor: '#FFF', // White border
        },
        '&:hover fieldset': {
          borderColor: '#FFF', // White border on hover
        },
      },
      '& .MuiInputLabel-root': {
        color: '#FFF', // Optional: White label text
      },
      '& .MuiInputBase-input': {
        color: '#FFF', // Optional: White text color
      },
    }}
  />
  {showFromCal && (
    <StaticDatePicker
      displayStaticWrapperAs="desktop"
      value={from}
      onChange={(newValue) => setFrom(newValue)}
      onAccept={() => setShowFromCal(false)}
      onClose={() => setShowFromCal(false)}
      renderInput={(params) => <TextField {...params} />}
    />
  )}
</Box>

{/* To Date */}
<Box sx={{ position: 'relative' }}>
  <TextField
    label={tab === 0 ? 'To Date' : 'End Date'}
    value={to ? to.toLocaleDateString() : ''}
    readOnly
    onClick={() => setShowToCal(true)}
    disabled={tab === 1}
    sx={{
      '& .MuiOutlinedInput-root': {
        '& fieldset': {
          borderColor: '#FFF', // White border
        },
        '&:hover fieldset': {
          borderColor: '#FFF', // White border on hover
        },
      },
      '& .MuiInputLabel-root': {
        color: '#FFF', // Optional: White label text
      },
      '& .MuiInputBase-input': {
        color: '#FFF', // Optional: White text color
      },
      '&.Mui-disabled': {
        '& fieldset': {
          borderColor: '#555', // Gray border when disabled (optional)
        },
      },
    }}
  />
  {showToCal && (
    <StaticDatePicker
      displayStaticWrapperAs="desktop"
      value={to}
      onChange={(newValue) => setTo(newValue)}
      onAccept={() => setShowToCal(false)}
      onClose={() => setShowToCal(false)}
      renderInput={(params) => <TextField {...params} />}
    />
  )}
</Box>