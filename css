{/* Region */}
<FormControl sx={{ minWidth: 250 }}>
  <InputLabel>Region</InputLabel>
  <Select
    value={region}
    onChange={e => { setRegion(e.target.value); setLocation(''); }}
    input={<OutlinedInput label="Region" sx={{ 
      '& .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border
      },
      '&:hover .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border on hover
      }
    }} />}
    sx={{
      '& .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border
      },
      '&:hover .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border on hover
      }
    }}
  >
    {REGION_OPTIONS.map(r =>
      <MenuItem key={r} value={r}>{r.toUpperCase()}</MenuItem>
    )}
  </Select>
</FormControl>

{/* Location */}
<FormControl sx={{ minWidth: 250 }}>
  <InputLabel>Location</InputLabel>
  <Select
    value={location}
    onChange={e => setLocation(e.target.value)}
    input={<OutlinedInput label="Location" sx={{ 
      '& .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border
      },
      '&:hover .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border on hover
      }
    }} />}
    sx={{
      '& .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border
      },
      '&:hover .MuiOutlinedInput-notchedOutline': {
        borderColor: '#FFF' // White border on hover
      }
    }}
    disabled={!region}
  >
    {(LOCATION_MAP[region] || []).map(loc =>
      <MenuItem key={loc} value={loc}>
        {loc.split('.').pop()}
      </MenuItem>
    )}
  </Select>
</FormControl>

{/* Employees (only Daily) */}
{tab === 0 && (
  <FormControl sx={{ minWidth: 250 }}>
    <InputLabel>Employees</InputLabel>
    <Select
      multiple
      value={selectedEmps}
      onChange={e => setSelectedEmps(e.target.value)}
      input={<OutlinedInput label="Employees" sx={{ 
        '& .MuiOutlinedInput-notchedOutline': {
          borderColor: '#FFF' // White border
        },
        '&:hover .MuiOutlinedInput-notchedOutline': {
          borderColor: '#FFF' // White border on hover
        }
      }} />}
      sx={{
        '& .MuiOutlinedInput-notchedOutline': {
          borderColor: '#FFF' // White border
        },
        '&:hover .MuiOutlinedInput-notchedOutline': {
          borderColor: '#FFF' // White border on hover
        }
      }}
      renderValue={vals => vals.join(', ')}
    >
      {EMPLOYEE_OPTIONS.map(n => (
        <MenuItem key={n} value={n}>
          <Checkbox checked={selectedEmps.includes(n)} />
          <ListItemText primary={n} />
        </MenuItem>
      ))}
    </Select>
  </FormControl>
)}