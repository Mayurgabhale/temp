// src/components/Header.jsx — APAC Edition (LACA-style)

import React, { useEffect, useState } from 'react';
import {
  AppBar,
  Toolbar,
  Box,
  Typography,
  Select,
  MenuItem,
  IconButton
} from '@mui/material';
import { useNavigate, useLocation } from 'react-router-dom';

import HomeIcon from '@mui/icons-material/Home';
import HistoryIcon from '@mui/icons-material/History';
import InfoIcon from '@mui/icons-material/Info';

import WuLogo from '../assets/wu-logo.png';
import IndiaFlag from '../assets/flags/india.png';
import MalaysiaFlag from '../assets/flags/malaysia.png';
import PhilippinesFlag from '../assets/flags/philippines.png';
import TaguigFlag from '../assets/flags/Taguig.png';
import JapanFlag from '../assets/flags/japan.png';
import DefaultFlag from '../assets/flags/default.png';

import { partitionList } from '../services/occupancy.service';
import { useLiveOccupancy } from '../hooks/useLiveOccupancy';

// Mapping of partition codes to user-friendly names
const displayNameMap = {
  'IN.Pune': 'Pune',
  'MY.Kuala Lumpur': 'Kuala Lumpur',
  'PH.Quezon': 'Quezon City',
  'PH.Taguig': 'Taguig',
  'JP.Tokyo': 'Tokyo',
};

// Mapping of partition codes to flag images
const flagMap = {
  'IN.Pune': IndiaFlag,
  'MY.Kuala Lumpur': MalaysiaFlag,
  'PH.Quezon': PhilippinesFlag,
  'PH.Taguig': TaguigFlag,
  'JP.Tokyo': JapanFlag,
};

export default function Header() {
  const navigate = useNavigate();
  const loc = useLocation();

  // Live update timestamp
  const { data } = useLiveOccupancy(1000);
  const [lastUpdate, setLastUpdate] = useState('');
  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  // URL path parsing
  const parts = loc.pathname.split('/').filter(Boolean);
  const isPartitionPath = parts[0] === 'partition' && Boolean(parts[1]);
  const currentPartition = isPartitionPath ? decodeURIComponent(parts[1]) : '';
  const suffixSegments = isPartitionPath
    ? parts.slice(2)
    : parts[0] === 'history'
    ? ['history']
    : [];

  // Select appropriate flag
  const selectedFlag = flagMap[currentPartition] || DefaultFlag;

  // Build path to current partition with optional suffix
  const makePartitionPath = suffix => {
    const base = `/partition/${encodeURIComponent(currentPartition)}`;
    return suffix ? `${base}/${suffix}` : base;
  };

  // Handle dropdown partition selection
  const handlePartitionChange = newPartition => {
    if (!newPartition) return navigate('/');
    const base = `/partition/${encodeURIComponent(newPartition)}`;
    const full = suffixSegments.length
      ? `${base}/${suffixSegments.join('/')}`
      : base;
    navigate(full);
  };

  return (
    <AppBar position="static" color="primary" sx={{ mb: 2 }}>
      <Toolbar sx={{ justifyContent: 'space-between', alignItems: 'center' }}>
        {/* Left section: Logo, title, navigation icons */}
        <Box display="flex" alignItems="center" sx={{ flexGrow: 1 }}>
          <Box component="img" src={WuLogo} alt="WU Logo" sx={{ height: 36, mr: 2 }} />
          <Typography variant="h6" sx={{ fontWeight: 600, mr: 3 }}>
            APAC Live Headcount
            {currentPartition && <> • {displayNameMap[currentPartition] || currentPartition}</>}
          </Typography>

          {/* Live update time */}
          <Typography
            variant="caption"
            sx={{
              color: '#FFC72C',
              ml: 2,
              fontStyle: 'Aptos Narrow',
              opacity: data ? 1 : 0,
              transition: 'opacity 0.8s'
            }}
          >
            {lastUpdate}
          </Typography>

          {/* Navigation buttons */}
          <IconButton
            size="large"
            color="inherit"
            onClick={() => navigate(currentPartition ? `/partition/${encodeURIComponent(currentPartition)}` : '/')}
          >
            <HomeIcon sx={{ color: '#4caf50' }} />
          </IconButton>

          <IconButton
            size="large"
            color="inherit"
            onClick={() =>
              navigate(currentPartition ? makePartitionPath('history') : '/history')
            }
          >
            <HistoryIcon sx={{ color: '#F88379' }} />
          </IconButton>

          <IconButton
            size="large"
            color="inherit"
            onClick={() => {
              const target = currentPartition
                ? makePartitionPath('details')
                : '/partition/IN.Pune/details';
              navigate(target);
            }}
          >
            <InfoIcon sx={{ color: '#2196f3' }} />
          </IconButton>
        </Box>

        {/* Right section: Partition selector and flag */}
        <Box display="flex" alignItems="center">
          <Select
            size="small"
            value={currentPartition}
            displayEmpty
            onChange={e => handlePartitionChange(e.target.value)}
            sx={{ bgcolor: 'background.paper', mr: 2, minWidth: 150 }}
          >
            <MenuItem value="">— Select Region —</MenuItem>
            {partitionList.map(p => (
              <MenuItem key={p} value={p}>
                {displayNameMap[p] || p}
              </MenuItem>
            ))}
          </Select>
          <Box component="img" src={selectedFlag} alt="Flag" sx={{ height: 50 }} />
        </Box>
      </Toolbar>
    </AppBar>
  );
}